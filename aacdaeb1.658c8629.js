(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{123:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return o})),a.d(t,"metadata",(function(){return l})),a.d(t,"rightToc",(function(){return c})),a.d(t,"default",(function(){return s}));var n=a(1),r=a(6),i=(a(0),a(134)),o={id:"babel-plugin",title:"babel-plugin-react-intl"},l={id:"tooling/babel-plugin",title:"babel-plugin-react-intl",description:"Extracts string messages for translation from modules that use [React Intl][].",source:"@site/docs/tooling/babel-plugin.md",permalink:"/formatjs/docs/tooling/babel-plugin",editUrl:"https://github.com/formatjs/formatjs/edit/master/website/docs/tooling/babel-plugin.md",sidebar:"tooling",previous:{title:"eslint-plugin-formatjs",permalink:"/formatjs/docs/tooling/linter"},next:{title:"ts-transformer",permalink:"/formatjs/docs/tooling/ts-transformer"}},c=[{value:"Dependencies",id:"dependencies",children:[{value:"React Intl",id:"react-intl",children:[]},{value:"Babel",id:"babel",children:[]}]},{value:"Installation",id:"installation",children:[]},{value:"Usage",id:"usage",children:[{value:"Via <code>.babelrc</code> (Recommended)",id:"via-babelrc-recommended",children:[]},{value:"Options",id:"options",children:[]},{value:"Via Node API",id:"via-node-api",children:[]}]}],b={rightToc:c};function s(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(n.a)({},b,a,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Extracts string messages for translation from modules that use ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/formatjs/react-intl"}),"React Intl"),"."),Object(i.b)("h2",{id:"dependencies"},"Dependencies"),Object(i.b)("h3",{id:"react-intl"},"React Intl"),Object(i.b)("p",null,"This Babel plugin works with React Intl v2.x"),Object(i.b)("h3",{id:"babel"},"Babel"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"3.x")," of this plugin works with Babel 7"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"2.x")," works with Babel 6"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"1.x")," works with Babel 5")),Object(i.b)("h2",{id:"installation"},"Installation"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-sh"}),"$ npm install babel-plugin-react-intl\n")),Object(i.b)("h2",{id:"usage"},"Usage"),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"This Babel plugin only visits ES6 modules which ",Object(i.b)("inlineCode",{parentName:"strong"},"import")," React Intl.")),Object(i.b)("p",null,"The default message descriptors for the app's default language will be extracted from: ",Object(i.b)("inlineCode",{parentName:"p"},"defineMessages()"),", ",Object(i.b)("inlineCode",{parentName:"p"},"defineMessage()"),", and ",Object(i.b)("inlineCode",{parentName:"p"},"<FormattedMessage>"),"; all of which are named exports of the React Intl package."),Object(i.b)("p",null,"If a message descriptor has a ",Object(i.b)("inlineCode",{parentName:"p"},"description"),", it'll be removed from the source after it's extracted to save bytes since it isn't used at runtime."),Object(i.b)("h3",{id:"via-babelrc-recommended"},"Via ",Object(i.b)("inlineCode",{parentName:"h3"},".babelrc")," (Recommended)"),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},".babelrc")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'{\n  "plugins": [\n    [\n      "react-intl",\n      {\n        "messagesDir": "./build/messages/"\n      }\n    ]\n  ]\n}\n')),Object(i.b)("h3",{id:"options"},"Options"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},Object(i.b)("inlineCode",{parentName:"strong"},"messagesDir")),": The target location where the plugin will output a ",Object(i.b)("inlineCode",{parentName:"p"},".json")," file corresponding to each component from which React Intl messages were extracted. If not provided, the extracted message descriptors will only be accessible via Babel's API.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},Object(i.b)("inlineCode",{parentName:"strong"},"extractSourceLocation")),": Whether the metadata about the location of the message in the source file should be extracted. If ",Object(i.b)("inlineCode",{parentName:"p"},"true"),", then ",Object(i.b)("inlineCode",{parentName:"p"},"file"),", ",Object(i.b)("inlineCode",{parentName:"p"},"start"),", and ",Object(i.b)("inlineCode",{parentName:"p"},"end")," fields will exist for each extracted message descriptors. Defaults to ",Object(i.b)("inlineCode",{parentName:"p"},"false"),".")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},Object(i.b)("inlineCode",{parentName:"strong"},"moduleSourceName")),": The ES6 module source name of the React Intl package. Defaults to: ",Object(i.b)("inlineCode",{parentName:"p"},'"react-intl"'),", but can be changed to another name/path to React Intl.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},Object(i.b)("inlineCode",{parentName:"strong"},"overrideIdFn")),": A function with the signature ",Object(i.b)("inlineCode",{parentName:"p"},"(id: string, defaultMessage: string, description: string|object) => string")," which allows you to override the ID both in the extracted javascript and messages.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},Object(i.b)("inlineCode",{parentName:"strong"},"removeDefaultMessage")),": Remove ",Object(i.b)("inlineCode",{parentName:"p"},"defaultMessage")," field in generated js after extraction.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},Object(i.b)("inlineCode",{parentName:"strong"},"additionalComponentNames")),": Additional component names to extract messages from, e.g: ",Object(i.b)("inlineCode",{parentName:"p"},"['FormattedFooBarMessage']"),". ",Object(i.b)("strong",{parentName:"p"},"NOTE"),": By default we check for the fact that ",Object(i.b)("inlineCode",{parentName:"p"},"FormattedMessage")," are imported from ",Object(i.b)("inlineCode",{parentName:"p"},"moduleSourceName")," to make sure variable alias works. This option does not do that so it's less safe.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},Object(i.b)("inlineCode",{parentName:"strong"},"extractFromFormatMessageCall")),": Opt-in to extract from ",Object(i.b)("inlineCode",{parentName:"p"},"intl.formatMessage")," call with the same restrictions, e.g: has to be called with object literal such as ",Object(i.b)("inlineCode",{parentName:"p"},"intl.formatMessage({ id: 'foo', defaultMessage: 'bar', description: 'baz'})"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},Object(i.b)("inlineCode",{parentName:"strong"},"outputEmptyJson")),": output file with empty ",Object(i.b)("inlineCode",{parentName:"p"},"[]")," if src has no messages. For build systems like bazel that relies on specific output mapping, not writing out a file can cause issues.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},Object(i.b)("inlineCode",{parentName:"strong"},"pragma")),": parse specific additional custom pragma. This allows you to tag certain file with metadata such as ",Object(i.b)("inlineCode",{parentName:"p"},"project"),". For example with this file:"))),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-tsx"}),'// @intl-meta project:my-custom-project\nimport {FormattedMessage} from \'react-intl\';\n\n<FormattedMessage defaultMessage="foo" id="bar" />;\n')),Object(i.b)("p",null,"and with option ",Object(i.b)("inlineCode",{parentName:"p"},'{pragma: "@intl-meta"}'),", we'll parse out ",Object(i.b)("inlineCode",{parentName:"p"},"// @intl-meta project:my-custom-project")," into ",Object(i.b)("inlineCode",{parentName:"p"},"{project: 'my-custom-project'}")," in the result file."),Object(i.b)("h3",{id:"via-node-api"},"Via Node API"),Object(i.b)("p",null,"The extract message descriptors are available via the ",Object(i.b)("inlineCode",{parentName:"p"},"metadata")," property on the object returned from Babel's ",Object(i.b)("inlineCode",{parentName:"p"},"transform()")," API:"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-javascript"}),"require('@babel/core').transform('code', {\n  plugins: ['react-intl'],\n}); // => { code, map, ast, metadata['react-intl'].messages, metadata['react-intl'].meta };\n")))}s.isMDXComponent=!0},134:function(e,t,a){"use strict";a.d(t,"a",(function(){return p})),a.d(t,"b",(function(){return u}));var n=a(0),r=a.n(n);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function c(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var b=r.a.createContext({}),s=function(e){var t=r.a.useContext(b),a=t;return e&&(a="function"==typeof e?e(t):l({},t,{},e)),a},p=function(e){var t=s(e.components);return r.a.createElement(b.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=Object(n.forwardRef)((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,o=e.parentName,b=c(e,["components","mdxType","originalType","parentName"]),p=s(a),d=n,u=p["".concat(o,".").concat(d)]||p[d]||m[d]||i;return a?r.a.createElement(u,l({ref:t},b,{components:a})):r.a.createElement(u,l({ref:t},b))}));function u(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,o=new Array(i);o[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:n,o[1]=l;for(var b=2;b<i;b++)o[b]=a[b];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,a)}d.displayName="MDXCreateElement"}}]);