{"version":3,"file":"intl-messageformat.min.js","sources":["intl-messageformat/src/utils.js","intl-messageformat/src/compiler.js","intl-messageformat/src/core.js","intl-messageformat/src/es5.js","intl-messageformat/node_modules/intl-messageformat-parser/src/parser.js","intl-messageformat/src/en.js","intl-messageformat/src/main.js"],"names":["$$utils$$extend","obj","i","len","source","key","sources","Array","prototype","slice","call","arguments","length","$$utils$$hop","$$compiler$$Compiler","locales","formats","pluralFn","this","$$compiler$$StringFormat","id","$$compiler$$PluralFormat","useOrdinal","offset","options","$$compiler$$PluralOffsetString","numberFormat","string","$$compiler$$SelectFormat","$$core$$MessageFormat","message","ast","__parse","type","TypeError","_mergeFormats","value","_resolveLocale","_findPluralRuleFunction","_locale","pattern","_compilePattern","messageFormat","format","values","_format","Object","hasOwnProperty","$$es5$$realDefineProp","defineProperty","e","$$es5$$defineProperty","__defineGetter__","name","desc","get","$$es5$$objCreate","create","proto","props","F","k","compile","pluralStack","currentPlural","pluralNumberFormat","compileMessage","Error","element","elements","push","compileMessageText","compileArgument","test","Intl","NumberFormat","replace","number","style","date","DateTimeFormat","time","compileOptions","ordinal","optionsHash","option","selector","pop","String","getOption","other","peg$subclass","child","parent","ctor","constructor","SyntaxError","expected","found","line","column","parse","input","peg$computePosDetails","pos","advance","details","startPos","endPos","p","ch","charAt","seenCR","peg$cachedPos","peg$cachedPosDetails","peg$fail","peg$maxFailPos","peg$currPos","peg$maxFailExpected","peg$buildException","cleanupExpected","sort","a","b","description","splice","buildMessage","stringEscape","s","hex","charCodeAt","toString","toUpperCase","expectedDesc","foundDesc","expectedDescs","join","posDetails","peg$parsestart","s0","peg$parsemessageFormatPattern","s1","s2","peg$parsemessageFormatElement","peg$FAILED","peg$reportedPos","peg$c1","peg$parsemessageTextElement","peg$parseargumentElement","peg$parsemessageText","s3","s4","s5","peg$parse_","peg$parsechars","peg$c2","peg$c3","peg$parsews","substring","peg$c4","peg$parseargument","peg$parsenumber","peg$c5","peg$silentFails","peg$c6","s6","s7","s8","peg$c7","peg$c8","peg$c10","peg$c11","peg$parseelementFormat","peg$c9","peg$c12","peg$c13","peg$c14","peg$parsesimpleFormat","peg$parsepluralFormat","peg$parseselectOrdinalFormat","peg$parseselectFormat","substr","peg$c15","peg$c16","peg$c17","peg$c18","peg$c19","peg$c20","peg$c21","peg$c22","peg$c23","peg$parsepluralStyle","peg$c24","peg$c25","peg$c26","peg$c27","peg$c28","peg$c29","peg$parseoptionalFormatPattern","peg$c30","peg$parseselector","peg$c31","peg$c32","peg$c33","peg$parseoffset","peg$c34","peg$c35","peg$c36","peg$c37","peg$c39","peg$c40","peg$c38","peg$c41","peg$parsedigit","peg$c42","peg$c43","peg$parsehexDigit","peg$c44","peg$c45","peg$c46","peg$c47","peg$c48","peg$c49","peg$c50","peg$parsechar","peg$c51","peg$c52","peg$c53","peg$c54","peg$c55","peg$c56","peg$c57","peg$c58","peg$c59","peg$c60","peg$c61","peg$c62","peg$c63","peg$c64","peg$c65","peg$result","peg$startRuleFunctions","start","peg$startRuleFunction","text","j","outerLen","inner","innerLen","messageText","pluralStyle","digits","parseInt","fromCharCode","chars","startRule","enumerable","currency","percent","short","month","day","year","medium","long","full","weekday","hour","minute","second","timeZoneName","data","locale","__localeData__","toLowerCase","intl$messageformat$parser$$default","writable","undefined","resolvedOptions","compiler","$$compiler$$default","localeData","pluralRuleFunction","parentLocale","part","result","defaults","mergedType","mergedFormats","concat","defaultLocale","localeParts","split","n","ord","v0","t0","Number","n10","n100","__addLocaleData","$$en$$default"],"mappings":"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","sourcesContent":["/*\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\nCopyrights licensed under the New BSD License.\nSee the accompanying LICENSE file for terms.\n*/\n\n/* jslint esnext: true */\n\nexport var hop = Object.prototype.hasOwnProperty;\n\nexport function extend(obj) {\n    var sources = Array.prototype.slice.call(arguments, 1),\n        i, len, source, key;\n\n    for (i = 0, len = sources.length; i < len; i += 1) {\n        source = sources[i];\n        if (!source) { continue; }\n\n        for (key in source) {\n            if (hop.call(source, key)) {\n                obj[key] = source[key];\n            }\n        }\n    }\n\n    return obj;\n}\n","/*\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\nCopyrights licensed under the New BSD License.\nSee the accompanying LICENSE file for terms.\n*/\n\n/* jslint esnext: true */\n\nexport default Compiler;\n\nfunction Compiler(locales, formats, pluralFn) {\n    this.locales  = locales;\n    this.formats  = formats;\n    this.pluralFn = pluralFn;\n}\n\nCompiler.prototype.compile = function (ast) {\n    this.pluralStack        = [];\n    this.currentPlural      = null;\n    this.pluralNumberFormat = null;\n\n    return this.compileMessage(ast);\n};\n\nCompiler.prototype.compileMessage = function (ast) {\n    if (!(ast && ast.type === 'messageFormatPattern')) {\n        throw new Error('Message AST is not of type: \"messageFormatPattern\"');\n    }\n\n    var elements = ast.elements,\n        pattern  = [];\n\n    var i, len, element;\n\n    for (i = 0, len = elements.length; i < len; i += 1) {\n        element = elements[i];\n\n        switch (element.type) {\n            case 'messageTextElement':\n                pattern.push(this.compileMessageText(element));\n                break;\n\n            case 'argumentElement':\n                pattern.push(this.compileArgument(element));\n                break;\n\n            default:\n                throw new Error('Message element does not have a valid type');\n        }\n    }\n\n    return pattern;\n};\n\nCompiler.prototype.compileMessageText = function (element) {\n    // When this `element` is part of plural sub-pattern and its value contains\n    // an unescaped '#', use a `PluralOffsetString` helper to properly output\n    // the number with the correct offset in the string.\n    if (this.currentPlural && /(^|[^\\\\])#/g.test(element.value)) {\n        // Create a cache a NumberFormat instance that can be reused for any\n        // PluralOffsetString instance in this message.\n        if (!this.pluralNumberFormat) {\n            this.pluralNumberFormat = new Intl.NumberFormat(this.locales);\n        }\n\n        return new PluralOffsetString(\n                this.currentPlural.id,\n                this.currentPlural.format.offset,\n                this.pluralNumberFormat,\n                element.value);\n    }\n\n    // Unescape the escaped '#'s in the message text.\n    return element.value.replace(/\\\\#/g, '#');\n};\n\nCompiler.prototype.compileArgument = function (element) {\n    var format = element.format;\n\n    if (!format) {\n        return new StringFormat(element.id);\n    }\n\n    var formats  = this.formats,\n        locales  = this.locales,\n        pluralFn = this.pluralFn,\n        options;\n\n    switch (format.type) {\n        case 'numberFormat':\n            options = formats.number[format.style];\n            return {\n                id    : element.id,\n                format: new Intl.NumberFormat(locales, options).format\n            };\n\n        case 'dateFormat':\n            options = formats.date[format.style];\n            return {\n                id    : element.id,\n                format: new Intl.DateTimeFormat(locales, options).format\n            };\n\n        case 'timeFormat':\n            options = formats.time[format.style];\n            return {\n                id    : element.id,\n                format: new Intl.DateTimeFormat(locales, options).format\n            };\n\n        case 'pluralFormat':\n            options = this.compileOptions(element);\n            return new PluralFormat(\n                element.id, format.ordinal, format.offset, options, pluralFn\n            );\n\n        case 'selectFormat':\n            options = this.compileOptions(element);\n            return new SelectFormat(element.id, options);\n\n        default:\n            throw new Error('Message element does not have a valid format type');\n    }\n};\n\nCompiler.prototype.compileOptions = function (element) {\n    var format      = element.format,\n        options     = format.options,\n        optionsHash = {};\n\n    // Save the current plural element, if any, then set it to a new value when\n    // compiling the options sub-patterns. This conforms the spec's algorithm\n    // for handling `\"#\"` syntax in message text.\n    this.pluralStack.push(this.currentPlural);\n    this.currentPlural = format.type === 'pluralFormat' ? element : null;\n\n    var i, len, option;\n\n    for (i = 0, len = options.length; i < len; i += 1) {\n        option = options[i];\n\n        // Compile the sub-pattern and save it under the options's selector.\n        optionsHash[option.selector] = this.compileMessage(option.value);\n    }\n\n    // Pop the plural stack to put back the original current plural value.\n    this.currentPlural = this.pluralStack.pop();\n\n    return optionsHash;\n};\n\n// -- Compiler Helper Classes --------------------------------------------------\n\nfunction StringFormat(id) {\n    this.id = id;\n}\n\nStringFormat.prototype.format = function (value) {\n    if (!value) {\n        return '';\n    }\n\n    return typeof value === 'string' ? value : String(value);\n};\n\nfunction PluralFormat(id, useOrdinal, offset, options, pluralFn) {\n    this.id         = id;\n    this.useOrdinal = useOrdinal;\n    this.offset     = offset;\n    this.options    = options;\n    this.pluralFn   = pluralFn;\n}\n\nPluralFormat.prototype.getOption = function (value) {\n    var options = this.options;\n\n    var option = options['=' + value] ||\n            options[this.pluralFn(value - this.offset, this.useOrdinal)];\n\n    return option || options.other;\n};\n\nfunction PluralOffsetString(id, offset, numberFormat, string) {\n    this.id           = id;\n    this.offset       = offset;\n    this.numberFormat = numberFormat;\n    this.string       = string;\n}\n\nPluralOffsetString.prototype.format = function (value) {\n    var number = this.numberFormat.format(value - this.offset);\n\n    return this.string\n            .replace(/(^|[^\\\\])#/g, '$1' + number)\n            .replace(/\\\\#/g, '#');\n};\n\nfunction SelectFormat(id, options) {\n    this.id      = id;\n    this.options = options;\n}\n\nSelectFormat.prototype.getOption = function (value) {\n    var options = this.options;\n    return options[value] || options.other;\n};\n","/*\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\nCopyrights licensed under the New BSD License.\nSee the accompanying LICENSE file for terms.\n*/\n\n/* jslint esnext: true */\n\nimport {extend, hop} from './utils';\nimport {defineProperty, objCreate} from './es5';\nimport Compiler from './compiler';\nimport parser from 'intl-messageformat-parser';\n\nexport default MessageFormat;\n\n// -- MessageFormat --------------------------------------------------------\n\nfunction MessageFormat(message, locales, formats) {\n    // Parse string messages into an AST.\n    var ast = typeof message === 'string' ?\n            MessageFormat.__parse(message) : message;\n\n    if (!(ast && ast.type === 'messageFormatPattern')) {\n        throw new TypeError('A message must be provided as a String or AST.');\n    }\n\n    // Creates a new object with the specified `formats` merged with the default\n    // formats.\n    formats = this._mergeFormats(MessageFormat.formats, formats);\n\n    // Defined first because it's used to build the format pattern.\n    defineProperty(this, '_locale',  {value: this._resolveLocale(locales)});\n\n    // Compile the `ast` to a pattern that is highly optimized for repeated\n    // `format()` invocations. **Note:** This passes the `locales` set provided\n    // to the constructor instead of just the resolved locale.\n    var pluralFn = this._findPluralRuleFunction(this._locale);\n    var pattern  = this._compilePattern(ast, locales, formats, pluralFn);\n\n    // \"Bind\" `format()` method to `this` so it can be passed by reference like\n    // the other `Intl` APIs.\n    var messageFormat = this;\n    this.format = function (values) {\n        return messageFormat._format(pattern, values);\n    };\n}\n\n// Default format options used as the prototype of the `formats` provided to the\n// constructor. These are used when constructing the internal Intl.NumberFormat\n// and Intl.DateTimeFormat instances.\ndefineProperty(MessageFormat, 'formats', {\n    enumerable: true,\n\n    value: {\n        number: {\n            'currency': {\n                style: 'currency'\n            },\n\n            'percent': {\n                style: 'percent'\n            }\n        },\n\n        date: {\n            'short': {\n                month: 'numeric',\n                day  : 'numeric',\n                year : '2-digit'\n            },\n\n            'medium': {\n                month: 'short',\n                day  : 'numeric',\n                year : 'numeric'\n            },\n\n            'long': {\n                month: 'long',\n                day  : 'numeric',\n                year : 'numeric'\n            },\n\n            'full': {\n                weekday: 'long',\n                month  : 'long',\n                day    : 'numeric',\n                year   : 'numeric'\n            }\n        },\n\n        time: {\n            'short': {\n                hour  : 'numeric',\n                minute: 'numeric'\n            },\n\n            'medium':  {\n                hour  : 'numeric',\n                minute: 'numeric',\n                second: 'numeric'\n            },\n\n            'long': {\n                hour        : 'numeric',\n                minute      : 'numeric',\n                second      : 'numeric',\n                timeZoneName: 'short'\n            },\n\n            'full': {\n                hour        : 'numeric',\n                minute      : 'numeric',\n                second      : 'numeric',\n                timeZoneName: 'short'\n            }\n        }\n    }\n});\n\n// Define internal private properties for dealing with locale data.\ndefineProperty(MessageFormat, '__localeData__', {value: objCreate(null)});\ndefineProperty(MessageFormat, '__addLocaleData', {value: function (data) {\n    if (!(data && data.locale)) {\n        throw new Error(\n            'Locale data provided to IntlMessageFormat is missing a ' +\n            '`locale` property'\n        );\n    }\n\n    MessageFormat.__localeData__[data.locale.toLowerCase()] = data;\n}});\n\n// Defines `__parse()` static method as an exposed private.\ndefineProperty(MessageFormat, '__parse', {value: parser.parse});\n\n// Define public `defaultLocale` property which defaults to English, but can be\n// set by the developer.\ndefineProperty(MessageFormat, 'defaultLocale', {\n    enumerable: true,\n    writable  : true,\n    value     : undefined\n});\n\nMessageFormat.prototype.resolvedOptions = function () {\n    // TODO: Provide anything else?\n    return {\n        locale: this._locale\n    };\n};\n\nMessageFormat.prototype._compilePattern = function (ast, locales, formats, pluralFn) {\n    var compiler = new Compiler(locales, formats, pluralFn);\n    return compiler.compile(ast);\n};\n\nMessageFormat.prototype._findPluralRuleFunction = function (locale) {\n    var localeData = MessageFormat.__localeData__;\n    var data       = localeData[locale.toLowerCase()];\n\n    // The locale data is de-duplicated, so we have to traverse the locale's\n    // hierarchy until we find a `pluralRuleFunction` to return.\n    while (data) {\n        if (data.pluralRuleFunction) {\n            return data.pluralRuleFunction;\n        }\n\n        data = data.parentLocale && localeData[data.parentLocale.toLowerCase()];\n    }\n\n    throw new Error(\n        'Locale data added to IntlMessageFormat is missing a ' +\n        '`pluralRuleFunction` for :' + locale\n    );\n};\n\nMessageFormat.prototype._format = function (pattern, values) {\n    var result = '',\n        i, len, part, id, value;\n\n    for (i = 0, len = pattern.length; i < len; i += 1) {\n        part = pattern[i];\n\n        // Exist early for string parts.\n        if (typeof part === 'string') {\n            result += part;\n            continue;\n        }\n\n        id = part.id;\n\n        // Enforce that all required values are provided by the caller.\n        if (!(values && hop.call(values, id))) {\n            throw new Error('A value must be provided for: ' + id);\n        }\n\n        value = values[id];\n\n        // Recursively format plural and select parts' option — which can be a\n        // nested pattern structure. The choosing of the option to use is\n        // abstracted-by and delegated-to the part helper object.\n        if (part.options) {\n            result += this._format(part.getOption(value), values);\n        } else {\n            result += part.format(value);\n        }\n    }\n\n    return result;\n};\n\nMessageFormat.prototype._mergeFormats = function (defaults, formats) {\n    var mergedFormats = {},\n        type, mergedType;\n\n    for (type in defaults) {\n        if (!hop.call(defaults, type)) { continue; }\n\n        mergedFormats[type] = mergedType = objCreate(defaults[type]);\n\n        if (formats && hop.call(formats, type)) {\n            extend(mergedType, formats[type]);\n        }\n    }\n\n    return mergedFormats;\n};\n\nMessageFormat.prototype._resolveLocale = function (locales) {\n    if (typeof locales === 'string') {\n        locales = [locales];\n    }\n\n    // Create a copy of the array so we can push on the default locale.\n    locales = (locales || []).concat(MessageFormat.defaultLocale);\n\n    var localeData = MessageFormat.__localeData__;\n    var i, len, localeParts, data;\n\n    // Using the set of locales + the default locale, we look for the first one\n    // which that has been registered. When data does not exist for a locale, we\n    // traverse its ancestors to find something that's been registered within\n    // its hierarchy of locales. Since we lack the proper `parentLocale` data\n    // here, we must take a naive approach to traversal.\n    for (i = 0, len = locales.length; i < len; i += 1) {\n        localeParts = locales[i].toLowerCase().split('-');\n\n        while (localeParts.length) {\n            data = localeData[localeParts.join('-')];\n            if (data) {\n                // Return the normalized locale string; e.g., we return \"en-US\",\n                // instead of \"en-us\".\n                return data.locale;\n            }\n\n            localeParts.pop();\n        }\n    }\n\n    var defaultLocale = locales.pop();\n    throw new Error(\n        'No locale data has been added to IntlMessageFormat for: ' +\n        locales.join(', ') + ', or the default locale: ' + defaultLocale\n    );\n};\n","/*\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\nCopyrights licensed under the New BSD License.\nSee the accompanying LICENSE file for terms.\n*/\n\n/* jslint esnext: true */\n\nimport {hop} from './utils';\n\nexport {defineProperty, objCreate};\n\n// Purposely using the same implementation as the Intl.js `Intl` polyfill.\n// Copyright 2013 Andy Earnshaw, MIT License\n\nvar realDefineProp = (function () {\n    try { return !!Object.defineProperty({}, 'a', {}); }\n    catch (e) { return false; }\n})();\n\nvar es3 = !realDefineProp && !Object.prototype.__defineGetter__;\n\nvar defineProperty = realDefineProp ? Object.defineProperty :\n        function (obj, name, desc) {\n\n    if ('get' in desc && obj.__defineGetter__) {\n        obj.__defineGetter__(name, desc.get);\n    } else if (!hop.call(obj, name) || 'value' in desc) {\n        obj[name] = desc.value;\n    }\n};\n\nvar objCreate = Object.create || function (proto, props) {\n    var obj, k;\n\n    function F() {}\n    F.prototype = proto;\n    obj = new F();\n\n    for (k in props) {\n        if (hop.call(props, k)) {\n            defineProperty(obj, k, props[k]);\n        }\n    }\n\n    return obj;\n};\n","export default (function() {\n  /*\n   * Generated by PEG.js 0.8.0.\n   *\n   * http://pegjs.majda.cz/\n   */\n\n  function peg$subclass(child, parent) {\n    function ctor() { this.constructor = child; }\n    ctor.prototype = parent.prototype;\n    child.prototype = new ctor();\n  }\n\n  function SyntaxError(message, expected, found, offset, line, column) {\n    this.message  = message;\n    this.expected = expected;\n    this.found    = found;\n    this.offset   = offset;\n    this.line     = line;\n    this.column   = column;\n\n    this.name     = \"SyntaxError\";\n  }\n\n  peg$subclass(SyntaxError, Error);\n\n  function parse(input) {\n    var options = arguments.length > 1 ? arguments[1] : {},\n\n        peg$FAILED = {},\n\n        peg$startRuleFunctions = { start: peg$parsestart },\n        peg$startRuleFunction  = peg$parsestart,\n\n        peg$c0 = [],\n        peg$c1 = function(elements) {\n                return {\n                    type    : 'messageFormatPattern',\n                    elements: elements\n                };\n            },\n        peg$c2 = peg$FAILED,\n        peg$c3 = function(text) {\n                var string = '',\n                    i, j, outerLen, inner, innerLen;\n\n                for (i = 0, outerLen = text.length; i < outerLen; i += 1) {\n                    inner = text[i];\n\n                    for (j = 0, innerLen = inner.length; j < innerLen; j += 1) {\n                        string += inner[j];\n                    }\n                }\n\n                return string;\n            },\n        peg$c4 = function(messageText) {\n                return {\n                    type : 'messageTextElement',\n                    value: messageText\n                };\n            },\n        peg$c5 = /^[^ \\t\\n\\r,.+={}#]/,\n        peg$c6 = { type: \"class\", value: \"[^ \\\\t\\\\n\\\\r,.+={}#]\", description: \"[^ \\\\t\\\\n\\\\r,.+={}#]\" },\n        peg$c7 = \"{\",\n        peg$c8 = { type: \"literal\", value: \"{\", description: \"\\\"{\\\"\" },\n        peg$c9 = null,\n        peg$c10 = \",\",\n        peg$c11 = { type: \"literal\", value: \",\", description: \"\\\",\\\"\" },\n        peg$c12 = \"}\",\n        peg$c13 = { type: \"literal\", value: \"}\", description: \"\\\"}\\\"\" },\n        peg$c14 = function(id, format) {\n                return {\n                    type  : 'argumentElement',\n                    id    : id,\n                    format: format && format[2]\n                };\n            },\n        peg$c15 = \"number\",\n        peg$c16 = { type: \"literal\", value: \"number\", description: \"\\\"number\\\"\" },\n        peg$c17 = \"date\",\n        peg$c18 = { type: \"literal\", value: \"date\", description: \"\\\"date\\\"\" },\n        peg$c19 = \"time\",\n        peg$c20 = { type: \"literal\", value: \"time\", description: \"\\\"time\\\"\" },\n        peg$c21 = function(type, style) {\n                return {\n                    type : type + 'Format',\n                    style: style && style[2]\n                };\n            },\n        peg$c22 = \"plural\",\n        peg$c23 = { type: \"literal\", value: \"plural\", description: \"\\\"plural\\\"\" },\n        peg$c24 = function(pluralStyle) {\n                return {\n                    type   : pluralStyle.type,\n                    ordinal: false,\n                    offset : pluralStyle.offset || 0,\n                    options: pluralStyle.options\n                };\n            },\n        peg$c25 = \"selectordinal\",\n        peg$c26 = { type: \"literal\", value: \"selectordinal\", description: \"\\\"selectordinal\\\"\" },\n        peg$c27 = function(pluralStyle) {\n                return {\n                    type   : pluralStyle.type,\n                    ordinal: true,\n                    offset : pluralStyle.offset || 0,\n                    options: pluralStyle.options\n                }\n            },\n        peg$c28 = \"select\",\n        peg$c29 = { type: \"literal\", value: \"select\", description: \"\\\"select\\\"\" },\n        peg$c30 = function(options) {\n                return {\n                    type   : 'selectFormat',\n                    options: options\n                };\n            },\n        peg$c31 = \"=\",\n        peg$c32 = { type: \"literal\", value: \"=\", description: \"\\\"=\\\"\" },\n        peg$c33 = function(selector, pattern) {\n                return {\n                    type    : 'optionalFormatPattern',\n                    selector: selector,\n                    value   : pattern\n                };\n            },\n        peg$c34 = \"offset:\",\n        peg$c35 = { type: \"literal\", value: \"offset:\", description: \"\\\"offset:\\\"\" },\n        peg$c36 = function(number) {\n                return number;\n            },\n        peg$c37 = function(offset, options) {\n                return {\n                    type   : 'pluralFormat',\n                    offset : offset,\n                    options: options\n                };\n            },\n        peg$c38 = { type: \"other\", description: \"whitespace\" },\n        peg$c39 = /^[ \\t\\n\\r]/,\n        peg$c40 = { type: \"class\", value: \"[ \\\\t\\\\n\\\\r]\", description: \"[ \\\\t\\\\n\\\\r]\" },\n        peg$c41 = { type: \"other\", description: \"optionalWhitespace\" },\n        peg$c42 = /^[0-9]/,\n        peg$c43 = { type: \"class\", value: \"[0-9]\", description: \"[0-9]\" },\n        peg$c44 = /^[0-9a-f]/i,\n        peg$c45 = { type: \"class\", value: \"[0-9a-f]i\", description: \"[0-9a-f]i\" },\n        peg$c46 = \"0\",\n        peg$c47 = { type: \"literal\", value: \"0\", description: \"\\\"0\\\"\" },\n        peg$c48 = /^[1-9]/,\n        peg$c49 = { type: \"class\", value: \"[1-9]\", description: \"[1-9]\" },\n        peg$c50 = function(digits) {\n            return parseInt(digits, 10);\n        },\n        peg$c51 = /^[^{}\\\\\\0-\\x1F \\t\\n\\r]/,\n        peg$c52 = { type: \"class\", value: \"[^{}\\\\\\\\\\\\0-\\\\x1F \\\\t\\\\n\\\\r]\", description: \"[^{}\\\\\\\\\\\\0-\\\\x1F \\\\t\\\\n\\\\r]\" },\n        peg$c53 = \"\\\\#\",\n        peg$c54 = { type: \"literal\", value: \"\\\\#\", description: \"\\\"\\\\\\\\#\\\"\" },\n        peg$c55 = function() { return '\\\\#'; },\n        peg$c56 = \"\\\\{\",\n        peg$c57 = { type: \"literal\", value: \"\\\\{\", description: \"\\\"\\\\\\\\{\\\"\" },\n        peg$c58 = function() { return '\\u007B'; },\n        peg$c59 = \"\\\\}\",\n        peg$c60 = { type: \"literal\", value: \"\\\\}\", description: \"\\\"\\\\\\\\}\\\"\" },\n        peg$c61 = function() { return '\\u007D'; },\n        peg$c62 = \"\\\\u\",\n        peg$c63 = { type: \"literal\", value: \"\\\\u\", description: \"\\\"\\\\\\\\u\\\"\" },\n        peg$c64 = function(digits) {\n                return String.fromCharCode(parseInt(digits, 16));\n            },\n        peg$c65 = function(chars) { return chars.join(''); },\n\n        peg$currPos          = 0,\n        peg$reportedPos      = 0,\n        peg$cachedPos        = 0,\n        peg$cachedPosDetails = { line: 1, column: 1, seenCR: false },\n        peg$maxFailPos       = 0,\n        peg$maxFailExpected  = [],\n        peg$silentFails      = 0,\n\n        peg$result;\n\n    if (\"startRule\" in options) {\n      if (!(options.startRule in peg$startRuleFunctions)) {\n        throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n      }\n\n      peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n    }\n\n    function text() {\n      return input.substring(peg$reportedPos, peg$currPos);\n    }\n\n    function offset() {\n      return peg$reportedPos;\n    }\n\n    function line() {\n      return peg$computePosDetails(peg$reportedPos).line;\n    }\n\n    function column() {\n      return peg$computePosDetails(peg$reportedPos).column;\n    }\n\n    function expected(description) {\n      throw peg$buildException(\n        null,\n        [{ type: \"other\", description: description }],\n        peg$reportedPos\n      );\n    }\n\n    function error(message) {\n      throw peg$buildException(message, null, peg$reportedPos);\n    }\n\n    function peg$computePosDetails(pos) {\n      function advance(details, startPos, endPos) {\n        var p, ch;\n\n        for (p = startPos; p < endPos; p++) {\n          ch = input.charAt(p);\n          if (ch === \"\\n\") {\n            if (!details.seenCR) { details.line++; }\n            details.column = 1;\n            details.seenCR = false;\n          } else if (ch === \"\\r\" || ch === \"\\u2028\" || ch === \"\\u2029\") {\n            details.line++;\n            details.column = 1;\n            details.seenCR = true;\n          } else {\n            details.column++;\n            details.seenCR = false;\n          }\n        }\n      }\n\n      if (peg$cachedPos !== pos) {\n        if (peg$cachedPos > pos) {\n          peg$cachedPos = 0;\n          peg$cachedPosDetails = { line: 1, column: 1, seenCR: false };\n        }\n        advance(peg$cachedPosDetails, peg$cachedPos, pos);\n        peg$cachedPos = pos;\n      }\n\n      return peg$cachedPosDetails;\n    }\n\n    function peg$fail(expected) {\n      if (peg$currPos < peg$maxFailPos) { return; }\n\n      if (peg$currPos > peg$maxFailPos) {\n        peg$maxFailPos = peg$currPos;\n        peg$maxFailExpected = [];\n      }\n\n      peg$maxFailExpected.push(expected);\n    }\n\n    function peg$buildException(message, expected, pos) {\n      function cleanupExpected(expected) {\n        var i = 1;\n\n        expected.sort(function(a, b) {\n          if (a.description < b.description) {\n            return -1;\n          } else if (a.description > b.description) {\n            return 1;\n          } else {\n            return 0;\n          }\n        });\n\n        while (i < expected.length) {\n          if (expected[i - 1] === expected[i]) {\n            expected.splice(i, 1);\n          } else {\n            i++;\n          }\n        }\n      }\n\n      function buildMessage(expected, found) {\n        function stringEscape(s) {\n          function hex(ch) { return ch.charCodeAt(0).toString(16).toUpperCase(); }\n\n          return s\n            .replace(/\\\\/g,   '\\\\\\\\')\n            .replace(/\"/g,    '\\\\\"')\n            .replace(/\\x08/g, '\\\\b')\n            .replace(/\\t/g,   '\\\\t')\n            .replace(/\\n/g,   '\\\\n')\n            .replace(/\\f/g,   '\\\\f')\n            .replace(/\\r/g,   '\\\\r')\n            .replace(/[\\x00-\\x07\\x0B\\x0E\\x0F]/g, function(ch) { return '\\\\x0' + hex(ch); })\n            .replace(/[\\x10-\\x1F\\x80-\\xFF]/g,    function(ch) { return '\\\\x'  + hex(ch); })\n            .replace(/[\\u0180-\\u0FFF]/g,         function(ch) { return '\\\\u0' + hex(ch); })\n            .replace(/[\\u1080-\\uFFFF]/g,         function(ch) { return '\\\\u'  + hex(ch); });\n        }\n\n        var expectedDescs = new Array(expected.length),\n            expectedDesc, foundDesc, i;\n\n        for (i = 0; i < expected.length; i++) {\n          expectedDescs[i] = expected[i].description;\n        }\n\n        expectedDesc = expected.length > 1\n          ? expectedDescs.slice(0, -1).join(\", \")\n              + \" or \"\n              + expectedDescs[expected.length - 1]\n          : expectedDescs[0];\n\n        foundDesc = found ? \"\\\"\" + stringEscape(found) + \"\\\"\" : \"end of input\";\n\n        return \"Expected \" + expectedDesc + \" but \" + foundDesc + \" found.\";\n      }\n\n      var posDetails = peg$computePosDetails(pos),\n          found      = pos < input.length ? input.charAt(pos) : null;\n\n      if (expected !== null) {\n        cleanupExpected(expected);\n      }\n\n      return new SyntaxError(\n        message !== null ? message : buildMessage(expected, found),\n        expected,\n        found,\n        pos,\n        posDetails.line,\n        posDetails.column\n      );\n    }\n\n    function peg$parsestart() {\n      var s0;\n\n      s0 = peg$parsemessageFormatPattern();\n\n      return s0;\n    }\n\n    function peg$parsemessageFormatPattern() {\n      var s0, s1, s2;\n\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parsemessageFormatElement();\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parsemessageFormatElement();\n      }\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c1(s1);\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parsemessageFormatElement() {\n      var s0;\n\n      s0 = peg$parsemessageTextElement();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseargumentElement();\n      }\n\n      return s0;\n    }\n\n    function peg$parsemessageText() {\n      var s0, s1, s2, s3, s4, s5;\n\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$currPos;\n      s3 = peg$parse_();\n      if (s3 !== peg$FAILED) {\n        s4 = peg$parsechars();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parse_();\n          if (s5 !== peg$FAILED) {\n            s3 = [s3, s4, s5];\n            s2 = s3;\n          } else {\n            peg$currPos = s2;\n            s2 = peg$c2;\n          }\n        } else {\n          peg$currPos = s2;\n          s2 = peg$c2;\n        }\n      } else {\n        peg$currPos = s2;\n        s2 = peg$c2;\n      }\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          s2 = peg$currPos;\n          s3 = peg$parse_();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parsechars();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parse_();\n              if (s5 !== peg$FAILED) {\n                s3 = [s3, s4, s5];\n                s2 = s3;\n              } else {\n                peg$currPos = s2;\n                s2 = peg$c2;\n              }\n            } else {\n              peg$currPos = s2;\n              s2 = peg$c2;\n            }\n          } else {\n            peg$currPos = s2;\n            s2 = peg$c2;\n          }\n        }\n      } else {\n        s1 = peg$c2;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c3(s1);\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parsews();\n        if (s1 !== peg$FAILED) {\n          s1 = input.substring(s0, peg$currPos);\n        }\n        s0 = s1;\n      }\n\n      return s0;\n    }\n\n    function peg$parsemessageTextElement() {\n      var s0, s1;\n\n      s0 = peg$currPos;\n      s1 = peg$parsemessageText();\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c4(s1);\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parseargument() {\n      var s0, s1, s2;\n\n      s0 = peg$parsenumber();\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = [];\n        if (peg$c5.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c6); }\n        }\n        if (s2 !== peg$FAILED) {\n          while (s2 !== peg$FAILED) {\n            s1.push(s2);\n            if (peg$c5.test(input.charAt(peg$currPos))) {\n              s2 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s2 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c6); }\n            }\n          }\n        } else {\n          s1 = peg$c2;\n        }\n        if (s1 !== peg$FAILED) {\n          s1 = input.substring(s0, peg$currPos);\n        }\n        s0 = s1;\n      }\n\n      return s0;\n    }\n\n    function peg$parseargumentElement() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 123) {\n        s1 = peg$c7;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c8); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseargument();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$currPos;\n              if (input.charCodeAt(peg$currPos) === 44) {\n                s6 = peg$c10;\n                peg$currPos++;\n              } else {\n                s6 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c11); }\n              }\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parse_();\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$parseelementFormat();\n                  if (s8 !== peg$FAILED) {\n                    s6 = [s6, s7, s8];\n                    s5 = s6;\n                  } else {\n                    peg$currPos = s5;\n                    s5 = peg$c2;\n                  }\n                } else {\n                  peg$currPos = s5;\n                  s5 = peg$c2;\n                }\n              } else {\n                peg$currPos = s5;\n                s5 = peg$c2;\n              }\n              if (s5 === peg$FAILED) {\n                s5 = peg$c9;\n              }\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parse_();\n                if (s6 !== peg$FAILED) {\n                  if (input.charCodeAt(peg$currPos) === 125) {\n                    s7 = peg$c12;\n                    peg$currPos++;\n                  } else {\n                    s7 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c13); }\n                  }\n                  if (s7 !== peg$FAILED) {\n                    peg$reportedPos = s0;\n                    s1 = peg$c14(s3, s5);\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$c2;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$c2;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c2;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c2;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n\n      return s0;\n    }\n\n    function peg$parseelementFormat() {\n      var s0;\n\n      s0 = peg$parsesimpleFormat();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parsepluralFormat();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseselectOrdinalFormat();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parseselectFormat();\n          }\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parsesimpleFormat() {\n      var s0, s1, s2, s3, s4, s5, s6;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 6) === peg$c15) {\n        s1 = peg$c15;\n        peg$currPos += 6;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c16); }\n      }\n      if (s1 === peg$FAILED) {\n        if (input.substr(peg$currPos, 4) === peg$c17) {\n          s1 = peg$c17;\n          peg$currPos += 4;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c18); }\n        }\n        if (s1 === peg$FAILED) {\n          if (input.substr(peg$currPos, 4) === peg$c19) {\n            s1 = peg$c19;\n            peg$currPos += 4;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c20); }\n          }\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s4 = peg$c10;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c11); }\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parse_();\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parsechars();\n              if (s6 !== peg$FAILED) {\n                s4 = [s4, s5, s6];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$c2;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$c2;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$c2;\n          }\n          if (s3 === peg$FAILED) {\n            s3 = peg$c9;\n          }\n          if (s3 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c21(s1, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n\n      return s0;\n    }\n\n    function peg$parsepluralFormat() {\n      var s0, s1, s2, s3, s4, s5;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 6) === peg$c22) {\n        s1 = peg$c22;\n        peg$currPos += 6;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c23); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s3 = peg$c10;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c11); }\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parsepluralStyle();\n              if (s5 !== peg$FAILED) {\n                peg$reportedPos = s0;\n                s1 = peg$c24(s5);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c2;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c2;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n\n      return s0;\n    }\n\n    function peg$parseselectOrdinalFormat() {\n      var s0, s1, s2, s3, s4, s5;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 13) === peg$c25) {\n        s1 = peg$c25;\n        peg$currPos += 13;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c26); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s3 = peg$c10;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c11); }\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parsepluralStyle();\n              if (s5 !== peg$FAILED) {\n                peg$reportedPos = s0;\n                s1 = peg$c27(s5);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c2;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c2;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n\n      return s0;\n    }\n\n    function peg$parseselectFormat() {\n      var s0, s1, s2, s3, s4, s5, s6;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 6) === peg$c28) {\n        s1 = peg$c28;\n        peg$currPos += 6;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c29); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s3 = peg$c10;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c11); }\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              s5 = [];\n              s6 = peg$parseoptionalFormatPattern();\n              if (s6 !== peg$FAILED) {\n                while (s6 !== peg$FAILED) {\n                  s5.push(s6);\n                  s6 = peg$parseoptionalFormatPattern();\n                }\n              } else {\n                s5 = peg$c2;\n              }\n              if (s5 !== peg$FAILED) {\n                peg$reportedPos = s0;\n                s1 = peg$c30(s5);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c2;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c2;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n\n      return s0;\n    }\n\n    function peg$parseselector() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 61) {\n        s2 = peg$c31;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c32); }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsenumber();\n        if (s3 !== peg$FAILED) {\n          s2 = [s2, s3];\n          s1 = s2;\n        } else {\n          peg$currPos = s1;\n          s1 = peg$c2;\n        }\n      } else {\n        peg$currPos = s1;\n        s1 = peg$c2;\n      }\n      if (s1 !== peg$FAILED) {\n        s1 = input.substring(s0, peg$currPos);\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$parsechars();\n      }\n\n      return s0;\n    }\n\n    function peg$parseoptionalFormatPattern() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n      s0 = peg$currPos;\n      s1 = peg$parse_();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseselector();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parse_();\n          if (s3 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 123) {\n              s4 = peg$c7;\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c8); }\n            }\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parse_();\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parsemessageFormatPattern();\n                if (s6 !== peg$FAILED) {\n                  s7 = peg$parse_();\n                  if (s7 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 125) {\n                      s8 = peg$c12;\n                      peg$currPos++;\n                    } else {\n                      s8 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c13); }\n                    }\n                    if (s8 !== peg$FAILED) {\n                      peg$reportedPos = s0;\n                      s1 = peg$c33(s2, s6);\n                      s0 = s1;\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$c2;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$c2;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$c2;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c2;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c2;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n\n      return s0;\n    }\n\n    function peg$parseoffset() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 7) === peg$c34) {\n        s1 = peg$c34;\n        peg$currPos += 7;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c35); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsenumber();\n          if (s3 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c36(s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n\n      return s0;\n    }\n\n    function peg$parsepluralStyle() {\n      var s0, s1, s2, s3, s4;\n\n      s0 = peg$currPos;\n      s1 = peg$parseoffset();\n      if (s1 === peg$FAILED) {\n        s1 = peg$c9;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$parseoptionalFormatPattern();\n          if (s4 !== peg$FAILED) {\n            while (s4 !== peg$FAILED) {\n              s3.push(s4);\n              s4 = peg$parseoptionalFormatPattern();\n            }\n          } else {\n            s3 = peg$c2;\n          }\n          if (s3 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c37(s1, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n\n      return s0;\n    }\n\n    function peg$parsews() {\n      var s0, s1;\n\n      peg$silentFails++;\n      s0 = [];\n      if (peg$c39.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c40); }\n      }\n      if (s1 !== peg$FAILED) {\n        while (s1 !== peg$FAILED) {\n          s0.push(s1);\n          if (peg$c39.test(input.charAt(peg$currPos))) {\n            s1 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c40); }\n          }\n        }\n      } else {\n        s0 = peg$c2;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c38); }\n      }\n\n      return s0;\n    }\n\n    function peg$parse_() {\n      var s0, s1, s2;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parsews();\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parsews();\n      }\n      if (s1 !== peg$FAILED) {\n        s1 = input.substring(s0, peg$currPos);\n      }\n      s0 = s1;\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c41); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsedigit() {\n      var s0;\n\n      if (peg$c42.test(input.charAt(peg$currPos))) {\n        s0 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c43); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsehexDigit() {\n      var s0;\n\n      if (peg$c44.test(input.charAt(peg$currPos))) {\n        s0 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c45); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsenumber() {\n      var s0, s1, s2, s3, s4, s5;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 48) {\n        s1 = peg$c46;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c47); }\n      }\n      if (s1 === peg$FAILED) {\n        s1 = peg$currPos;\n        s2 = peg$currPos;\n        if (peg$c48.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c49); }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = [];\n          s5 = peg$parsedigit();\n          while (s5 !== peg$FAILED) {\n            s4.push(s5);\n            s5 = peg$parsedigit();\n          }\n          if (s4 !== peg$FAILED) {\n            s3 = [s3, s4];\n            s2 = s3;\n          } else {\n            peg$currPos = s2;\n            s2 = peg$c2;\n          }\n        } else {\n          peg$currPos = s2;\n          s2 = peg$c2;\n        }\n        if (s2 !== peg$FAILED) {\n          s2 = input.substring(s1, peg$currPos);\n        }\n        s1 = s2;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c50(s1);\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parsechar() {\n      var s0, s1, s2, s3, s4, s5, s6, s7;\n\n      if (peg$c51.test(input.charAt(peg$currPos))) {\n        s0 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c52); }\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 2) === peg$c53) {\n          s1 = peg$c53;\n          peg$currPos += 2;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c54); }\n        }\n        if (s1 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c55();\n        }\n        s0 = s1;\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          if (input.substr(peg$currPos, 2) === peg$c56) {\n            s1 = peg$c56;\n            peg$currPos += 2;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c57); }\n          }\n          if (s1 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c58();\n          }\n          s0 = s1;\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            if (input.substr(peg$currPos, 2) === peg$c59) {\n              s1 = peg$c59;\n              peg$currPos += 2;\n            } else {\n              s1 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c60); }\n            }\n            if (s1 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c61();\n            }\n            s0 = s1;\n            if (s0 === peg$FAILED) {\n              s0 = peg$currPos;\n              if (input.substr(peg$currPos, 2) === peg$c62) {\n                s1 = peg$c62;\n                peg$currPos += 2;\n              } else {\n                s1 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c63); }\n              }\n              if (s1 !== peg$FAILED) {\n                s2 = peg$currPos;\n                s3 = peg$currPos;\n                s4 = peg$parsehexDigit();\n                if (s4 !== peg$FAILED) {\n                  s5 = peg$parsehexDigit();\n                  if (s5 !== peg$FAILED) {\n                    s6 = peg$parsehexDigit();\n                    if (s6 !== peg$FAILED) {\n                      s7 = peg$parsehexDigit();\n                      if (s7 !== peg$FAILED) {\n                        s4 = [s4, s5, s6, s7];\n                        s3 = s4;\n                      } else {\n                        peg$currPos = s3;\n                        s3 = peg$c2;\n                      }\n                    } else {\n                      peg$currPos = s3;\n                      s3 = peg$c2;\n                    }\n                  } else {\n                    peg$currPos = s3;\n                    s3 = peg$c2;\n                  }\n                } else {\n                  peg$currPos = s3;\n                  s3 = peg$c2;\n                }\n                if (s3 !== peg$FAILED) {\n                  s3 = input.substring(s2, peg$currPos);\n                }\n                s2 = s3;\n                if (s2 !== peg$FAILED) {\n                  peg$reportedPos = s0;\n                  s1 = peg$c64(s2);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$c2;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c2;\n              }\n            }\n          }\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parsechars() {\n      var s0, s1, s2;\n\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parsechar();\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          s2 = peg$parsechar();\n        }\n      } else {\n        s1 = peg$c2;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c65(s1);\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    peg$result = peg$startRuleFunction();\n\n    if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n      return peg$result;\n    } else {\n      if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n        peg$fail({ type: \"end\", description: \"end of input\" });\n      }\n\n      throw peg$buildException(null, peg$maxFailExpected, peg$maxFailPos);\n    }\n  }\n\n  return {\n    SyntaxError: SyntaxError,\n    parse:       parse\n  };\n})();","// GENERATED FILE\nexport default {\"locale\":\"en\",\"pluralRuleFunction\":function (n,ord){var s=String(n).split(\".\"),v0=!s[1],t0=Number(s[0])==n,n10=t0&&s[0].slice(-1),n100=t0&&s[0].slice(-2);if(ord)return n10==1&&n100!=11?\"one\":n10==2&&n100!=12?\"two\":n10==3&&n100!=13?\"few\":\"other\";return n==1&&v0?\"one\":\"other\"}};\n","/* jslint esnext: true */\n\nimport IntlMessageFormat from './core';\nimport defaultLocale from './en';\n\nIntlMessageFormat.__addLocaleData(defaultLocale);\nIntlMessageFormat.defaultLocale = 'en';\n\nexport default IntlMessageFormat;\n"]}