// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`[glob] basic case: defineMessages -> stdout 1`] = `
Array [
  Object {
    "defaultMessage": "ignore",
    "id": "ignore",
  },
  Object {
    "defaultMessage": "Hello World!",
    "description": "The default message",
    "id": "foo.bar.baz",
  },
  Object {
    "defaultMessage": "Hello Nurse!",
    "description": "Another message",
    "id": "foo.bar.biff",
  },
  Object {
    "defaultMessage": "{count, plural, =0 {ðŸ˜­} one {# kitten} other {# kittens}}",
    "description": "Counts kittens",
    "id": "app.home.kittens",
  },
  Object {
    "defaultMessage": "   Some whitespace   ",
    "description": "Whitespace",
    "id": "trailing.ws",
  },
  Object {
    "defaultMessage": "A quoted value ''{value}'",
    "description": "Escaped apostrophe",
    "id": "escaped.apostrophe",
  },
  Object {
    "defaultMessage": "No ID",
    "description": "no ID",
    "id": "ae494",
  },
]
`;

exports[`basic case: defineMessages -> directory 1`] = `
Array [
  "actual.json",
]
`;

exports[`basic case: defineMessages -> directory 2`] = `
Array [
  Object {
    "defaultMessage": "Hello World!",
    "description": "The default message",
    "id": "foo.bar.baz",
  },
  Object {
    "defaultMessage": "Hello Nurse!",
    "description": "Another message",
    "id": "foo.bar.biff",
  },
  Object {
    "defaultMessage": "{count, plural, =0 {ðŸ˜­} one {# kitten} other {# kittens}}",
    "description": "Counts kittens",
    "id": "app.home.kittens",
  },
  Object {
    "defaultMessage": "   Some whitespace   ",
    "description": "Whitespace",
    "id": "trailing.ws",
  },
  Object {
    "defaultMessage": "A quoted value ''{value}'",
    "description": "Escaped apostrophe",
    "id": "escaped.apostrophe",
  },
  Object {
    "defaultMessage": "No ID",
    "description": "no ID",
    "id": "ae494",
  },
]
`;

exports[`basic case: defineMessages -> stdout 1`] = `
Array [
  Object {
    "defaultMessage": "Hello World!",
    "description": "The default message",
    "id": "foo.bar.baz",
  },
  Object {
    "defaultMessage": "Hello Nurse!",
    "description": "Another message",
    "id": "foo.bar.biff",
  },
  Object {
    "defaultMessage": "{count, plural, =0 {ðŸ˜­} one {# kitten} other {# kittens}}",
    "description": "Counts kittens",
    "id": "app.home.kittens",
  },
  Object {
    "defaultMessage": "   Some whitespace   ",
    "description": "Whitespace",
    "id": "trailing.ws",
  },
  Object {
    "defaultMessage": "A quoted value ''{value}'",
    "description": "Escaped apostrophe",
    "id": "escaped.apostrophe",
  },
  Object {
    "defaultMessage": "No ID",
    "description": "no ID",
    "id": "ae494",
  },
]
`;

exports[`basic case: help 1`] = `
"Usage: formatjs extract [options] [files...]

Extract string messages from React components that use react-intl.
The input language is expected to be TypeScript or ES2017 with JSX.

Options:
  --messages-dir <dir>                                  The target location where the plugin will output a \`.json\` file corresponding to each component from which React Intl messages were extracted. If not provided, the extracted message descriptors will be printed to standard output.
  --out-file <path>                                     The target file path where the plugin will output an aggregated \`.json\` file of allthe translations from the \`files\` supplied.
  This flag will ignore --messages-dir
  --id-interpolation-pattern <pattern>                  If certain message descriptors don't have id, this \`pattern\` will be used to automaticallygenerate IDs for them. Default to \`[contenthash:5]\`.
  See https://github.com/webpack/loader-utils#interpolatename for sample patterns
  --extract-source-location                             Whether the metadata about the location of the message in the source file should be extracted. If \`true\`, then \`file\`, \`start\`, and \`end\` fields will exist for each extracted message descriptors. (default: false)
  --module-source-name <name>                           The ES6 module source name of the React Intl package. Defaults to: \`\\"react-intl\\"\`, but can be changed to another name/path to React Intl.
  --remove-default-message                              Remove \`defaultMessage\` field in generated js after extraction (default: false)
  --additional-component-names <comma-separated-names>  Additional component names to extract messages from, e.g: \`['FormattedFooBarMessage']\`. **NOTE**: By default we check for the fact that \`FormattedMessage\` & \`FormattedHTMLMessage\` are imported from \`moduleSourceName\` to make sure variable alias works. This option does not do that so it's less safe.
  --extract-from-format-message-call                    Opt-in to extract from \`intl.formatMessage\` call with the same restrictions, e.g: has to be called with object literal such as \`intl.formatMessage({ id: 'foo', defaultMessage: 'bar', description: 'baz'})\` (default: false)
  --ignore <files>                                      List of glob paths to **not** extract translations from.
  -h, --help                                            output usage information
"
`;

exports[`ignore -> stdout 1`] = `
Array [
  Object {
    "defaultMessage": "Hello World!",
    "description": "The default message",
    "id": "foo.bar.baz",
  },
  Object {
    "defaultMessage": "Hello Nurse!",
    "description": "Another message",
    "id": "foo.bar.biff",
  },
  Object {
    "defaultMessage": "{count, plural, =0 {ðŸ˜­} one {# kitten} other {# kittens}}",
    "description": "Counts kittens",
    "id": "app.home.kittens",
  },
  Object {
    "defaultMessage": "   Some whitespace   ",
    "description": "Whitespace",
    "id": "trailing.ws",
  },
  Object {
    "defaultMessage": "A quoted value ''{value}'",
    "description": "Escaped apostrophe",
    "id": "escaped.apostrophe",
  },
  Object {
    "defaultMessage": "No ID",
    "description": "no ID",
    "id": "ae494",
  },
  Object {
    "defaultMessage": "formatted message",
    "description": "foo",
    "id": "inline",
  },
]
`;

exports[`ignore -> stdout 2`] = `
Array [
  Object {
    "defaultMessage": "ignore",
    "id": "ignore",
  },
  Object {
    "defaultMessage": "Hello World!",
    "description": "The default message",
    "id": "foo.bar.baz",
  },
  Object {
    "defaultMessage": "Hello Nurse!",
    "description": "Another message",
    "id": "foo.bar.biff",
  },
  Object {
    "defaultMessage": "{count, plural, =0 {ðŸ˜­} one {# kitten} other {# kittens}}",
    "description": "Counts kittens",
    "id": "app.home.kittens",
  },
  Object {
    "defaultMessage": "   Some whitespace   ",
    "description": "Whitespace",
    "id": "trailing.ws",
  },
  Object {
    "defaultMessage": "A quoted value ''{value}'",
    "description": "Escaped apostrophe",
    "id": "escaped.apostrophe",
  },
  Object {
    "defaultMessage": "No ID",
    "description": "no ID",
    "id": "ae494",
  },
]
`;

exports[`typescript -> stdout 1`] = `
Array [
  Object {
    "defaultMessage": "Hello World!",
    "description": "The default message",
    "id": "foo.bar.baz",
  },
  Object {
    "defaultMessage": "Hello Nurse!",
    "description": "Another message",
    "id": "foo.bar.biff",
  },
  Object {
    "defaultMessage": "{count, plural, =0 {ðŸ˜­} one {# kitten} other {# kittens}}",
    "description": "Counts kittens",
    "id": "app.home.kittens",
  },
  Object {
    "defaultMessage": "   Some whitespace   ",
    "description": "Whitespace",
    "id": "trailing.ws",
  },
  Object {
    "defaultMessage": "A quoted value ''{value}'",
    "description": "Escaped apostrophe",
    "id": "escaped.apostrophe",
  },
  Object {
    "defaultMessage": "No ID",
    "description": "no ID",
    "id": "ae494",
  },
  Object {
    "defaultMessage": "formatted message",
    "description": "foo",
    "id": "inline",
  },
]
`;
