// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`pegParse() can pegParse '   some random test   ' 1`] = `
Array [
  Object {
    "type": 0,
    "value": "   some random test   ",
  },
]
`;

exports[`pegParse() can pegParse ''#'' 1`] = `
Array [
  Object {
    "type": 0,
    "value": "'#'",
  },
]
`;

exports[`pegParse() can pegParse ''{'' 1`] = `
Array [
  Object {
    "type": 0,
    "value": "{",
  },
]
`;

exports[`pegParse() can pegParse ''{name}'' 1`] = `
Array [
  Object {
    "type": 0,
    "value": "{name}",
  },
]
`;

exports[`pegParse() can pegParse ''}'' 1`] = `
Array [
  Object {
    "type": 0,
    "value": "}",
  },
]
`;

exports[`pegParse() can pegParse '{  num , number,percent  }' 1`] = `
Array [
  Object {
    "style": "percent",
    "type": 2,
    "value": "num",
  },
]
`;

exports[`pegParse() can pegParse '{c, plural, =1 { {text} project} other { {text} projects}}' 1`] = `
Array [
  Object {
    "offset": 0,
    "options": Object {
      "=1": Object {
        "location": undefined,
        "value": Array [
          Object {
            "type": 0,
            "value": " ",
          },
          Object {
            "type": 1,
            "value": "text",
          },
          Object {
            "type": 0,
            "value": " project",
          },
        ],
      },
      "other": Object {
        "location": undefined,
        "value": Array [
          Object {
            "type": 0,
            "value": " ",
          },
          Object {
            "type": 1,
            "value": "text",
          },
          Object {
            "type": 0,
            "value": " projects",
          },
        ],
      },
    },
    "pluralType": "cardinal",
    "type": 6,
    "value": "c",
  },
]
`;

exports[`pegParse() can pegParse '{c, plural, =99 { {text} project} other { {text} projects}}' 1`] = `
Array [
  Object {
    "offset": 0,
    "options": Object {
      "=99": Object {
        "location": undefined,
        "value": Array [
          Object {
            "type": 0,
            "value": " ",
          },
          Object {
            "type": 1,
            "value": "text",
          },
          Object {
            "type": 0,
            "value": " project",
          },
        ],
      },
      "other": Object {
        "location": undefined,
        "value": Array [
          Object {
            "type": 0,
            "value": " ",
          },
          Object {
            "type": 1,
            "value": "text",
          },
          Object {
            "type": 0,
            "value": " projects",
          },
        ],
      },
    },
    "pluralType": "cardinal",
    "type": 6,
    "value": "c",
  },
]
`;

exports[`pegParse() can pegParse '{c, plural, offset:-2 =-1 { {text} project} other { {text} projects}}' 1`] = `
Array [
  Object {
    "offset": -2,
    "options": Object {
      "=-1": Object {
        "location": undefined,
        "value": Array [
          Object {
            "type": 0,
            "value": " ",
          },
          Object {
            "type": 1,
            "value": "text",
          },
          Object {
            "type": 0,
            "value": " project",
          },
        ],
      },
      "other": Object {
        "location": undefined,
        "value": Array [
          Object {
            "type": 0,
            "value": " ",
          },
          Object {
            "type": 1,
            "value": "text",
          },
          Object {
            "type": 0,
            "value": " projects",
          },
        ],
      },
    },
    "pluralType": "cardinal",
    "type": 6,
    "value": "c",
  },
]
`;

exports[`pegParse() can pegParse '{count, time}' 1`] = `
Array [
  Object {
    "style": null,
    "type": 4,
    "value": "count",
  },
]
`;

exports[`pegParse() can pegParse '{floor, selectordinal, =0{ground} one{#st} two{#nd} few{#rd} other{#th}} floor' 1`] = `
Array [
  Object {
    "offset": 0,
    "options": Object {
      "=0": Object {
        "location": undefined,
        "value": Array [
          Object {
            "type": 0,
            "value": "ground",
          },
        ],
      },
      "few": Object {
        "location": undefined,
        "value": Array [
          Object {
            "type": 7,
          },
          Object {
            "type": 0,
            "value": "rd",
          },
        ],
      },
      "one": Object {
        "location": undefined,
        "value": Array [
          Object {
            "type": 7,
          },
          Object {
            "type": 0,
            "value": "st",
          },
        ],
      },
      "other": Object {
        "location": undefined,
        "value": Array [
          Object {
            "type": 7,
          },
          Object {
            "type": 0,
            "value": "th",
          },
        ],
      },
      "two": Object {
        "location": undefined,
        "value": Array [
          Object {
            "type": 7,
          },
          Object {
            "type": 0,
            "value": "nd",
          },
        ],
      },
    },
    "pluralType": "ordinal",
    "type": 6,
    "value": "floor",
  },
  Object {
    "type": 0,
    "value": " floor",
  },
]
`;

exports[`pegParse() can pegParse '{gender, select, female {woman} male {man} other {person}}' 1`] = `
Array [
  Object {
    "options": Object {
      "female": Object {
        "location": undefined,
        "value": Array [
          Object {
            "type": 0,
            "value": "woman",
          },
        ],
      },
      "male": Object {
        "location": undefined,
        "value": Array [
          Object {
            "type": 0,
            "value": "man",
          },
        ],
      },
      "other": Object {
        "location": undefined,
        "value": Array [
          Object {
            "type": 0,
            "value": "person",
          },
        ],
      },
    },
    "type": 5,
    "value": "gender",
  },
]
`;

exports[`pegParse() can pegParse '{howMany, select,      one {{actor1}}      other {          {nExtraActors, plural,          one {{actor1} and {actor2}}          other {{actor1} and {nExtraActors} others}          }}      } shared this file.' 1`] = `
Array [
  Object {
    "options": Object {
      "one": Object {
        "location": undefined,
        "value": Array [
          Object {
            "type": 1,
            "value": "actor1",
          },
        ],
      },
      "other": Object {
        "location": undefined,
        "value": Array [
          Object {
            "type": 0,
            "value": "          ",
          },
          Object {
            "offset": 0,
            "options": Object {
              "one": Object {
                "location": undefined,
                "value": Array [
                  Object {
                    "type": 1,
                    "value": "actor1",
                  },
                  Object {
                    "type": 0,
                    "value": " and ",
                  },
                  Object {
                    "type": 1,
                    "value": "actor2",
                  },
                ],
              },
              "other": Object {
                "location": undefined,
                "value": Array [
                  Object {
                    "type": 1,
                    "value": "actor1",
                  },
                  Object {
                    "type": 0,
                    "value": " and ",
                  },
                  Object {
                    "type": 1,
                    "value": "nExtraActors",
                  },
                  Object {
                    "type": 0,
                    "value": " others",
                  },
                ],
              },
            },
            "pluralType": "cardinal",
            "type": 6,
            "value": "nExtraActors",
          },
        ],
      },
    },
    "type": 5,
    "value": "howMany",
  },
  Object {
    "type": 0,
    "value": " shared this file.",
  },
]
`;

exports[`pegParse() can pegParse '{num, number, percent}' 1`] = `
Array [
  Object {
    "style": "percent",
    "type": 2,
    "value": "num",
  },
]
`;

exports[`pegParse() can pegParse '{numPhotos, plural, =0{no photos} =1{one photo} other{# photos}}' 1`] = `
Array [
  Object {
    "offset": 0,
    "options": Object {
      "=0": Object {
        "location": undefined,
        "value": Array [
          Object {
            "type": 0,
            "value": "no photos",
          },
        ],
      },
      "=1": Object {
        "location": undefined,
        "value": Array [
          Object {
            "type": 0,
            "value": "one photo",
          },
        ],
      },
      "other": Object {
        "location": undefined,
        "value": Array [
          Object {
            "type": 7,
          },
          Object {
            "type": 0,
            "value": " photos",
          },
        ],
      },
    },
    "pluralType": "cardinal",
    "type": 6,
    "value": "numPhotos",
  },
]
`;

exports[`pegParse() can pegParse '{type, select,
      drop {
        {units, plural,
          one {# drop}
          other {# drops}
        }
      }
      teaspoon {
        {units, plural,
          one {# teaspoon}
          other {# teaspoons}
        }
      }
      tablespoon {
        {units, plural,
          one {# tablespoon}
          other {# tablespoons}
        }
      }
    }' 1`] = `
Array [
  Object {
    "options": Object {
      "drop": Object {
        "location": undefined,
        "value": Array [
          Object {
            "type": 0,
            "value": "
        ",
          },
          Object {
            "offset": 0,
            "options": Object {
              "one": Object {
                "location": undefined,
                "value": Array [
                  Object {
                    "type": 7,
                  },
                  Object {
                    "type": 0,
                    "value": " drop",
                  },
                ],
              },
              "other": Object {
                "location": undefined,
                "value": Array [
                  Object {
                    "type": 7,
                  },
                  Object {
                    "type": 0,
                    "value": " drops",
                  },
                ],
              },
            },
            "pluralType": "cardinal",
            "type": 6,
            "value": "units",
          },
          Object {
            "type": 0,
            "value": "
      ",
          },
        ],
      },
      "tablespoon": Object {
        "location": undefined,
        "value": Array [
          Object {
            "type": 0,
            "value": "
        ",
          },
          Object {
            "offset": 0,
            "options": Object {
              "one": Object {
                "location": undefined,
                "value": Array [
                  Object {
                    "type": 7,
                  },
                  Object {
                    "type": 0,
                    "value": " tablespoon",
                  },
                ],
              },
              "other": Object {
                "location": undefined,
                "value": Array [
                  Object {
                    "type": 7,
                  },
                  Object {
                    "type": 0,
                    "value": " tablespoons",
                  },
                ],
              },
            },
            "pluralType": "cardinal",
            "type": 6,
            "value": "units",
          },
          Object {
            "type": 0,
            "value": "
      ",
          },
        ],
      },
      "teaspoon": Object {
        "location": undefined,
        "value": Array [
          Object {
            "type": 0,
            "value": "
        ",
          },
          Object {
            "offset": 0,
            "options": Object {
              "one": Object {
                "location": undefined,
                "value": Array [
                  Object {
                    "type": 7,
                  },
                  Object {
                    "type": 0,
                    "value": " teaspoon",
                  },
                ],
              },
              "other": Object {
                "location": undefined,
                "value": Array [
                  Object {
                    "type": 7,
                  },
                  Object {
                    "type": 0,
                    "value": " teaspoons",
                  },
                ],
              },
            },
            "pluralType": "cardinal",
            "type": 6,
            "value": "units",
          },
          Object {
            "type": 0,
            "value": "
      ",
          },
        ],
      },
    },
    "type": 5,
    "value": "type",
  },
]
`;

exports[`pegParse() can pegParse 'Foo {var1, plural, =0{# var1} other{{var2, plural, =0{# var2} other{# var2-other}} # other}}' 1`] = `
Array [
  Object {
    "type": 0,
    "value": "Foo ",
  },
  Object {
    "offset": 0,
    "options": Object {
      "=0": Object {
        "location": undefined,
        "value": Array [
          Object {
            "type": 7,
          },
          Object {
            "type": 0,
            "value": " var1",
          },
        ],
      },
      "other": Object {
        "location": undefined,
        "value": Array [
          Object {
            "offset": 0,
            "options": Object {
              "=0": Object {
                "location": undefined,
                "value": Array [
                  Object {
                    "type": 7,
                  },
                  Object {
                    "type": 0,
                    "value": " var2",
                  },
                ],
              },
              "other": Object {
                "location": undefined,
                "value": Array [
                  Object {
                    "type": 7,
                  },
                  Object {
                    "type": 0,
                    "value": " var2-other",
                  },
                ],
              },
            },
            "pluralType": "cardinal",
            "type": 6,
            "value": "var2",
          },
          Object {
            "type": 0,
            "value": " ",
          },
          Object {
            "type": 7,
          },
          Object {
            "type": 0,
            "value": " other",
          },
        ],
      },
    },
    "pluralType": "cardinal",
    "type": 6,
    "value": "var1",
  },
]
`;

exports[`pegParse() can pegParse 'Hello, {name}!' 1`] = `
Array [
  Object {
    "type": 0,
    "value": "Hello, ",
  },
  Object {
    "type": 1,
    "value": "name",
  },
  Object {
    "type": 0,
    "value": "!",
  },
]
`;

exports[`pegParse() can pegParse 'Hello, World!' 1`] = `
Array [
  Object {
    "type": 0,
    "value": "Hello, World!",
  },
]
`;

exports[`pegParse() can pegParse 'My name is {FIRST} {LAST}, age {age, number}, time {time, time}, date {date, date}.' 1`] = `
Array [
  Object {
    "type": 0,
    "value": "My name is ",
  },
  Object {
    "type": 1,
    "value": "FIRST",
  },
  Object {
    "type": 0,
    "value": " ",
  },
  Object {
    "type": 1,
    "value": "LAST",
  },
  Object {
    "type": 0,
    "value": ", age ",
  },
  Object {
    "style": null,
    "type": 2,
    "value": "age",
  },
  Object {
    "type": 0,
    "value": ", time ",
  },
  Object {
    "style": null,
    "type": 4,
    "value": "time",
  },
  Object {
    "type": 0,
    "value": ", date ",
  },
  Object {
    "style": null,
    "type": 3,
    "value": "date",
  },
  Object {
    "type": 0,
    "value": ".",
  },
]
`;

exports[`pegParse() can pegParse 'This '{isn''t}' obvious' 1`] = `
Array [
  Object {
    "type": 0,
    "value": "This {isn't} obvious",
  },
]
`;

exports[`pegParse() can pegParse 'this is {count,plural,offset:1 one{{count, number} dog} other{{count, number} dogs}}' 1`] = `
Array [
  Object {
    "type": 0,
    "value": "this is ",
  },
  Object {
    "offset": 1,
    "options": Object {
      "one": Object {
        "location": undefined,
        "value": Array [
          Object {
            "style": null,
            "type": 2,
            "value": "count",
          },
          Object {
            "type": 0,
            "value": " dog",
          },
        ],
      },
      "other": Object {
        "location": undefined,
        "value": Array [
          Object {
            "style": null,
            "type": 2,
            "value": "count",
          },
          Object {
            "type": 0,
            "value": " dogs",
          },
        ],
      },
    },
    "pluralType": "cardinal",
    "type": 6,
    "value": "count",
  },
]
`;

exports[`pegParse() can print AST from '   some random test   ' 1`] = `"   some random test   "`;

exports[`pegParse() can print AST from ''#'' 1`] = `"'#'"`;

exports[`pegParse() can print AST from ''{'' 1`] = `"'{'"`;

exports[`pegParse() can print AST from ''{name}'' 1`] = `"'{name}'"`;

exports[`pegParse() can print AST from ''}'' 1`] = `"'}'"`;

exports[`pegParse() can print AST from '{  num , number,percent  }' 1`] = `"{num, number, percent}"`;

exports[`pegParse() can print AST from '{c, plural, =1 { {text} project} other { {text} projects}}' 1`] = `"{c,plural,=1{ {text} project} other{ {text} projects}}"`;

exports[`pegParse() can print AST from '{c, plural, =99 { {text} project} other { {text} projects}}' 1`] = `"{c,plural,=99{ {text} project} other{ {text} projects}}"`;

exports[`pegParse() can print AST from '{c, plural, offset:-2 =-1 { {text} project} other { {text} projects}}' 1`] = `"{c,plural,offset:-2 =-1{ {text} project} other{ {text} projects}}"`;

exports[`pegParse() can print AST from '{count, time}' 1`] = `"{count, time}"`;

exports[`pegParse() can print AST from '{floor, selectordinal, =0{ground} one{#st} two{#nd} few{#rd} other{#th}} floor' 1`] = `"{floor,selectordinal,=0{ground} one{#st} two{#nd} few{#rd} other{#th}} floor"`;

exports[`pegParse() can print AST from '{gender, select, female {woman} male {man} other {person}}' 1`] = `"{gender,select,female{woman} male{man} other{person}}"`;

exports[`pegParse() can print AST from '{howMany, select,      one {{actor1}}      other {          {nExtraActors, plural,          one {{actor1} and {actor2}}          other {{actor1} and {nExtraActors} others}          }}      } shared this file.' 1`] = `"{howMany,select,one{{actor1}} other{          {nExtraActors,plural,one{{actor1} and {actor2}} other{{actor1} and {nExtraActors} others}}}} shared this file."`;

exports[`pegParse() can print AST from '{num, number, percent}' 1`] = `"{num, number, percent}"`;

exports[`pegParse() can print AST from '{numPhotos, plural, =0{no photos} =1{one photo} other{# photos}}' 1`] = `"{numPhotos,plural,=0{no photos} =1{one photo} other{# photos}}"`;

exports[`pegParse() can print AST from '{type, select,
      drop {
        {units, plural,
          one {# drop}
          other {# drops}
        }
      }
      teaspoon {
        {units, plural,
          one {# teaspoon}
          other {# teaspoons}
        }
      }
      tablespoon {
        {units, plural,
          one {# tablespoon}
          other {# tablespoons}
        }
      }
    }' 1`] = `
"{type,select,drop{
        {units,plural,one{# drop} other{# drops}}
      } teaspoon{
        {units,plural,one{# teaspoon} other{# teaspoons}}
      } tablespoon{
        {units,plural,one{# tablespoon} other{# tablespoons}}
      }}"
`;

exports[`pegParse() can print AST from 'Foo {var1, plural, =0{# var1} other{{var2, plural, =0{# var2} other{# var2-other}} # other}}' 1`] = `"Foo {var1,plural,=0{# var1} other{{var2,plural,=0{# var2} other{# var2-other}} # other}}"`;

exports[`pegParse() can print AST from 'Hello, {name}!' 1`] = `"Hello, {name}!"`;

exports[`pegParse() can print AST from 'Hello, World!' 1`] = `"Hello, World!"`;

exports[`pegParse() can print AST from 'My name is {FIRST} {LAST}, age {age, number}, time {time, time}, date {date, date}.' 1`] = `"My name is {FIRST} {LAST}, age {age, number}, time {time, time}, date {date, date}."`;

exports[`pegParse() can print AST from 'This '{isn''t}' obvious' 1`] = `"This '{isn't}' obvious"`;

exports[`pegParse() can print AST from 'this is {count,plural,offset:1 one{{count, number} dog} other{{count, number} dogs}}' 1`] = `"this is {count,plural,offset:1 one{{count, number} dog} other{{count, number} dogs}}"`;

exports[`pegParse({ captureLocation: true }) can pegParse '   some random test   ' 1`] = `
Array [
  Object {
    "type": 0,
    "value": "   some random test   ",
  },
]
`;

exports[`pegParse({ captureLocation: true }) can pegParse ''#'' 1`] = `
Array [
  Object {
    "type": 0,
    "value": "'#'",
  },
]
`;

exports[`pegParse({ captureLocation: true }) can pegParse ''{'' 1`] = `
Array [
  Object {
    "type": 0,
    "value": "{",
  },
]
`;

exports[`pegParse({ captureLocation: true }) can pegParse ''{name}'' 1`] = `
Array [
  Object {
    "type": 0,
    "value": "{name}",
  },
]
`;

exports[`pegParse({ captureLocation: true }) can pegParse ''}'' 1`] = `
Array [
  Object {
    "type": 0,
    "value": "}",
  },
]
`;

exports[`pegParse({ captureLocation: true }) can pegParse '{  num , number,percent  }' 1`] = `
Array [
  Object {
    "style": "percent",
    "type": 2,
    "value": "num",
  },
]
`;

exports[`pegParse({ captureLocation: true }) can pegParse '{c, plural, =1 { {text} project} other { {text} projects}}' 1`] = `
Array [
  Object {
    "offset": 0,
    "options": Object {
      "=1": Object {
        "location": undefined,
        "value": Array [
          Object {
            "type": 0,
            "value": " ",
          },
          Object {
            "type": 1,
            "value": "text",
          },
          Object {
            "type": 0,
            "value": " project",
          },
        ],
      },
      "other": Object {
        "location": undefined,
        "value": Array [
          Object {
            "type": 0,
            "value": " ",
          },
          Object {
            "type": 1,
            "value": "text",
          },
          Object {
            "type": 0,
            "value": " projects",
          },
        ],
      },
    },
    "pluralType": "cardinal",
    "type": 6,
    "value": "c",
  },
]
`;

exports[`pegParse({ captureLocation: true }) can pegParse '{c, plural, =99 { {text} project} other { {text} projects}}' 1`] = `
Array [
  Object {
    "offset": 0,
    "options": Object {
      "=99": Object {
        "location": undefined,
        "value": Array [
          Object {
            "type": 0,
            "value": " ",
          },
          Object {
            "type": 1,
            "value": "text",
          },
          Object {
            "type": 0,
            "value": " project",
          },
        ],
      },
      "other": Object {
        "location": undefined,
        "value": Array [
          Object {
            "type": 0,
            "value": " ",
          },
          Object {
            "type": 1,
            "value": "text",
          },
          Object {
            "type": 0,
            "value": " projects",
          },
        ],
      },
    },
    "pluralType": "cardinal",
    "type": 6,
    "value": "c",
  },
]
`;

exports[`pegParse({ captureLocation: true }) can pegParse '{c, plural, offset:-2 =-1 { {text} project} other { {text} projects}}' 1`] = `
Array [
  Object {
    "offset": -2,
    "options": Object {
      "=-1": Object {
        "location": undefined,
        "value": Array [
          Object {
            "type": 0,
            "value": " ",
          },
          Object {
            "type": 1,
            "value": "text",
          },
          Object {
            "type": 0,
            "value": " project",
          },
        ],
      },
      "other": Object {
        "location": undefined,
        "value": Array [
          Object {
            "type": 0,
            "value": " ",
          },
          Object {
            "type": 1,
            "value": "text",
          },
          Object {
            "type": 0,
            "value": " projects",
          },
        ],
      },
    },
    "pluralType": "cardinal",
    "type": 6,
    "value": "c",
  },
]
`;

exports[`pegParse({ captureLocation: true }) can pegParse '{count, time}' 1`] = `
Array [
  Object {
    "style": null,
    "type": 4,
    "value": "count",
  },
]
`;

exports[`pegParse({ captureLocation: true }) can pegParse '{floor, selectordinal, =0{ground} one{#st} two{#nd} few{#rd} other{#th}} floor' 1`] = `
Array [
  Object {
    "offset": 0,
    "options": Object {
      "=0": Object {
        "location": undefined,
        "value": Array [
          Object {
            "type": 0,
            "value": "ground",
          },
        ],
      },
      "few": Object {
        "location": undefined,
        "value": Array [
          Object {
            "type": 7,
          },
          Object {
            "type": 0,
            "value": "rd",
          },
        ],
      },
      "one": Object {
        "location": undefined,
        "value": Array [
          Object {
            "type": 7,
          },
          Object {
            "type": 0,
            "value": "st",
          },
        ],
      },
      "other": Object {
        "location": undefined,
        "value": Array [
          Object {
            "type": 7,
          },
          Object {
            "type": 0,
            "value": "th",
          },
        ],
      },
      "two": Object {
        "location": undefined,
        "value": Array [
          Object {
            "type": 7,
          },
          Object {
            "type": 0,
            "value": "nd",
          },
        ],
      },
    },
    "pluralType": "ordinal",
    "type": 6,
    "value": "floor",
  },
  Object {
    "type": 0,
    "value": " floor",
  },
]
`;

exports[`pegParse({ captureLocation: true }) can pegParse '{gender, select, female {woman} male {man} other {person}}' 1`] = `
Array [
  Object {
    "options": Object {
      "female": Object {
        "location": undefined,
        "value": Array [
          Object {
            "type": 0,
            "value": "woman",
          },
        ],
      },
      "male": Object {
        "location": undefined,
        "value": Array [
          Object {
            "type": 0,
            "value": "man",
          },
        ],
      },
      "other": Object {
        "location": undefined,
        "value": Array [
          Object {
            "type": 0,
            "value": "person",
          },
        ],
      },
    },
    "type": 5,
    "value": "gender",
  },
]
`;

exports[`pegParse({ captureLocation: true }) can pegParse '{howMany, select,      one {{actor1}}      other {          {nExtraActors, plural,          one {{actor1} and {actor2}}          other {{actor1} and {nExtraActors} others}          }}      } shared this file.' 1`] = `
Array [
  Object {
    "options": Object {
      "one": Object {
        "location": undefined,
        "value": Array [
          Object {
            "type": 1,
            "value": "actor1",
          },
        ],
      },
      "other": Object {
        "location": undefined,
        "value": Array [
          Object {
            "type": 0,
            "value": "          ",
          },
          Object {
            "offset": 0,
            "options": Object {
              "one": Object {
                "location": undefined,
                "value": Array [
                  Object {
                    "type": 1,
                    "value": "actor1",
                  },
                  Object {
                    "type": 0,
                    "value": " and ",
                  },
                  Object {
                    "type": 1,
                    "value": "actor2",
                  },
                ],
              },
              "other": Object {
                "location": undefined,
                "value": Array [
                  Object {
                    "type": 1,
                    "value": "actor1",
                  },
                  Object {
                    "type": 0,
                    "value": " and ",
                  },
                  Object {
                    "type": 1,
                    "value": "nExtraActors",
                  },
                  Object {
                    "type": 0,
                    "value": " others",
                  },
                ],
              },
            },
            "pluralType": "cardinal",
            "type": 6,
            "value": "nExtraActors",
          },
        ],
      },
    },
    "type": 5,
    "value": "howMany",
  },
  Object {
    "type": 0,
    "value": " shared this file.",
  },
]
`;

exports[`pegParse({ captureLocation: true }) can pegParse '{num, number, percent}' 1`] = `
Array [
  Object {
    "style": "percent",
    "type": 2,
    "value": "num",
  },
]
`;

exports[`pegParse({ captureLocation: true }) can pegParse '{numPhotos, plural, =0{no photos} =1{one photo} other{# photos}}' 1`] = `
Array [
  Object {
    "offset": 0,
    "options": Object {
      "=0": Object {
        "location": undefined,
        "value": Array [
          Object {
            "type": 0,
            "value": "no photos",
          },
        ],
      },
      "=1": Object {
        "location": undefined,
        "value": Array [
          Object {
            "type": 0,
            "value": "one photo",
          },
        ],
      },
      "other": Object {
        "location": undefined,
        "value": Array [
          Object {
            "type": 7,
          },
          Object {
            "type": 0,
            "value": " photos",
          },
        ],
      },
    },
    "pluralType": "cardinal",
    "type": 6,
    "value": "numPhotos",
  },
]
`;

exports[`pegParse({ captureLocation: true }) can pegParse '{type, select,
      drop {
        {units, plural,
          one {# drop}
          other {# drops}
        }
      }
      teaspoon {
        {units, plural,
          one {# teaspoon}
          other {# teaspoons}
        }
      }
      tablespoon {
        {units, plural,
          one {# tablespoon}
          other {# tablespoons}
        }
      }
    }' 1`] = `
Array [
  Object {
    "options": Object {
      "drop": Object {
        "location": undefined,
        "value": Array [
          Object {
            "type": 0,
            "value": "
        ",
          },
          Object {
            "offset": 0,
            "options": Object {
              "one": Object {
                "location": undefined,
                "value": Array [
                  Object {
                    "type": 7,
                  },
                  Object {
                    "type": 0,
                    "value": " drop",
                  },
                ],
              },
              "other": Object {
                "location": undefined,
                "value": Array [
                  Object {
                    "type": 7,
                  },
                  Object {
                    "type": 0,
                    "value": " drops",
                  },
                ],
              },
            },
            "pluralType": "cardinal",
            "type": 6,
            "value": "units",
          },
          Object {
            "type": 0,
            "value": "
      ",
          },
        ],
      },
      "tablespoon": Object {
        "location": undefined,
        "value": Array [
          Object {
            "type": 0,
            "value": "
        ",
          },
          Object {
            "offset": 0,
            "options": Object {
              "one": Object {
                "location": undefined,
                "value": Array [
                  Object {
                    "type": 7,
                  },
                  Object {
                    "type": 0,
                    "value": " tablespoon",
                  },
                ],
              },
              "other": Object {
                "location": undefined,
                "value": Array [
                  Object {
                    "type": 7,
                  },
                  Object {
                    "type": 0,
                    "value": " tablespoons",
                  },
                ],
              },
            },
            "pluralType": "cardinal",
            "type": 6,
            "value": "units",
          },
          Object {
            "type": 0,
            "value": "
      ",
          },
        ],
      },
      "teaspoon": Object {
        "location": undefined,
        "value": Array [
          Object {
            "type": 0,
            "value": "
        ",
          },
          Object {
            "offset": 0,
            "options": Object {
              "one": Object {
                "location": undefined,
                "value": Array [
                  Object {
                    "type": 7,
                  },
                  Object {
                    "type": 0,
                    "value": " teaspoon",
                  },
                ],
              },
              "other": Object {
                "location": undefined,
                "value": Array [
                  Object {
                    "type": 7,
                  },
                  Object {
                    "type": 0,
                    "value": " teaspoons",
                  },
                ],
              },
            },
            "pluralType": "cardinal",
            "type": 6,
            "value": "units",
          },
          Object {
            "type": 0,
            "value": "
      ",
          },
        ],
      },
    },
    "type": 5,
    "value": "type",
  },
]
`;

exports[`pegParse({ captureLocation: true }) can pegParse 'Foo {var1, plural, =0{# var1} other{{var2, plural, =0{# var2} other{# var2-other}} # other}}' 1`] = `
Array [
  Object {
    "type": 0,
    "value": "Foo ",
  },
  Object {
    "offset": 0,
    "options": Object {
      "=0": Object {
        "location": undefined,
        "value": Array [
          Object {
            "type": 7,
          },
          Object {
            "type": 0,
            "value": " var1",
          },
        ],
      },
      "other": Object {
        "location": undefined,
        "value": Array [
          Object {
            "offset": 0,
            "options": Object {
              "=0": Object {
                "location": undefined,
                "value": Array [
                  Object {
                    "type": 7,
                  },
                  Object {
                    "type": 0,
                    "value": " var2",
                  },
                ],
              },
              "other": Object {
                "location": undefined,
                "value": Array [
                  Object {
                    "type": 7,
                  },
                  Object {
                    "type": 0,
                    "value": " var2-other",
                  },
                ],
              },
            },
            "pluralType": "cardinal",
            "type": 6,
            "value": "var2",
          },
          Object {
            "type": 0,
            "value": " ",
          },
          Object {
            "type": 7,
          },
          Object {
            "type": 0,
            "value": " other",
          },
        ],
      },
    },
    "pluralType": "cardinal",
    "type": 6,
    "value": "var1",
  },
]
`;

exports[`pegParse({ captureLocation: true }) can pegParse 'Hello, {name}!' 1`] = `
Array [
  Object {
    "type": 0,
    "value": "Hello, ",
  },
  Object {
    "type": 1,
    "value": "name",
  },
  Object {
    "type": 0,
    "value": "!",
  },
]
`;

exports[`pegParse({ captureLocation: true }) can pegParse 'Hello, World!' 1`] = `
Array [
  Object {
    "type": 0,
    "value": "Hello, World!",
  },
]
`;

exports[`pegParse({ captureLocation: true }) can pegParse 'My name is {FIRST} {LAST}, age {age, number}, time {time, time}, date {date, date}.' 1`] = `
Array [
  Object {
    "type": 0,
    "value": "My name is ",
  },
  Object {
    "type": 1,
    "value": "FIRST",
  },
  Object {
    "type": 0,
    "value": " ",
  },
  Object {
    "type": 1,
    "value": "LAST",
  },
  Object {
    "type": 0,
    "value": ", age ",
  },
  Object {
    "style": null,
    "type": 2,
    "value": "age",
  },
  Object {
    "type": 0,
    "value": ", time ",
  },
  Object {
    "style": null,
    "type": 4,
    "value": "time",
  },
  Object {
    "type": 0,
    "value": ", date ",
  },
  Object {
    "style": null,
    "type": 3,
    "value": "date",
  },
  Object {
    "type": 0,
    "value": ".",
  },
]
`;

exports[`pegParse({ captureLocation: true }) can pegParse 'This '{isn''t}' obvious' 1`] = `
Array [
  Object {
    "type": 0,
    "value": "This {isn't} obvious",
  },
]
`;

exports[`pegParse({ captureLocation: true }) can pegParse 'this is {count,plural,offset:1 one{{count, number} dog} other{{count, number} dogs}}' 1`] = `
Array [
  Object {
    "type": 0,
    "value": "this is ",
  },
  Object {
    "offset": 1,
    "options": Object {
      "one": Object {
        "location": undefined,
        "value": Array [
          Object {
            "style": null,
            "type": 2,
            "value": "count",
          },
          Object {
            "type": 0,
            "value": " dog",
          },
        ],
      },
      "other": Object {
        "location": undefined,
        "value": Array [
          Object {
            "style": null,
            "type": 2,
            "value": "count",
          },
          Object {
            "type": 0,
            "value": " dogs",
          },
        ],
      },
    },
    "pluralType": "cardinal",
    "type": 6,
    "value": "count",
  },
]
`;

exports[`pegParse({ captureLocation: true }) can print AST from '   some random test   ' 1`] = `"   some random test   "`;

exports[`pegParse({ captureLocation: true }) can print AST from ''#'' 1`] = `"'#'"`;

exports[`pegParse({ captureLocation: true }) can print AST from ''{'' 1`] = `"'{'"`;

exports[`pegParse({ captureLocation: true }) can print AST from ''{name}'' 1`] = `"'{name}'"`;

exports[`pegParse({ captureLocation: true }) can print AST from ''}'' 1`] = `"'}'"`;

exports[`pegParse({ captureLocation: true }) can print AST from '{  num , number,percent  }' 1`] = `"{num, number, percent}"`;

exports[`pegParse({ captureLocation: true }) can print AST from '{c, plural, =1 { {text} project} other { {text} projects}}' 1`] = `"{c,plural,=1{ {text} project} other{ {text} projects}}"`;

exports[`pegParse({ captureLocation: true }) can print AST from '{c, plural, =99 { {text} project} other { {text} projects}}' 1`] = `"{c,plural,=99{ {text} project} other{ {text} projects}}"`;

exports[`pegParse({ captureLocation: true }) can print AST from '{c, plural, offset:-2 =-1 { {text} project} other { {text} projects}}' 1`] = `"{c,plural,offset:-2 =-1{ {text} project} other{ {text} projects}}"`;

exports[`pegParse({ captureLocation: true }) can print AST from '{count, time}' 1`] = `"{count, time}"`;

exports[`pegParse({ captureLocation: true }) can print AST from '{floor, selectordinal, =0{ground} one{#st} two{#nd} few{#rd} other{#th}} floor' 1`] = `"{floor,selectordinal,=0{ground} one{#st} two{#nd} few{#rd} other{#th}} floor"`;

exports[`pegParse({ captureLocation: true }) can print AST from '{gender, select, female {woman} male {man} other {person}}' 1`] = `"{gender,select,female{woman} male{man} other{person}}"`;

exports[`pegParse({ captureLocation: true }) can print AST from '{howMany, select,      one {{actor1}}      other {          {nExtraActors, plural,          one {{actor1} and {actor2}}          other {{actor1} and {nExtraActors} others}          }}      } shared this file.' 1`] = `"{howMany,select,one{{actor1}} other{          {nExtraActors,plural,one{{actor1} and {actor2}} other{{actor1} and {nExtraActors} others}}}} shared this file."`;

exports[`pegParse({ captureLocation: true }) can print AST from '{num, number, percent}' 1`] = `"{num, number, percent}"`;

exports[`pegParse({ captureLocation: true }) can print AST from '{numPhotos, plural, =0{no photos} =1{one photo} other{# photos}}' 1`] = `"{numPhotos,plural,=0{no photos} =1{one photo} other{# photos}}"`;

exports[`pegParse({ captureLocation: true }) can print AST from '{type, select,
      drop {
        {units, plural,
          one {# drop}
          other {# drops}
        }
      }
      teaspoon {
        {units, plural,
          one {# teaspoon}
          other {# teaspoons}
        }
      }
      tablespoon {
        {units, plural,
          one {# tablespoon}
          other {# tablespoons}
        }
      }
    }' 1`] = `
"{type,select,drop{
        {units,plural,one{# drop} other{# drops}}
      } teaspoon{
        {units,plural,one{# teaspoon} other{# teaspoons}}
      } tablespoon{
        {units,plural,one{# tablespoon} other{# tablespoons}}
      }}"
`;

exports[`pegParse({ captureLocation: true }) can print AST from 'Foo {var1, plural, =0{# var1} other{{var2, plural, =0{# var2} other{# var2-other}} # other}}' 1`] = `"Foo {var1,plural,=0{# var1} other{{var2,plural,=0{# var2} other{# var2-other}} # other}}"`;

exports[`pegParse({ captureLocation: true }) can print AST from 'Hello, {name}!' 1`] = `"Hello, {name}!"`;

exports[`pegParse({ captureLocation: true }) can print AST from 'Hello, World!' 1`] = `"Hello, World!"`;

exports[`pegParse({ captureLocation: true }) can print AST from 'My name is {FIRST} {LAST}, age {age, number}, time {time, time}, date {date, date}.' 1`] = `"My name is {FIRST} {LAST}, age {age, number}, time {time, time}, date {date, date}."`;

exports[`pegParse({ captureLocation: true }) can print AST from 'This '{isn''t}' obvious' 1`] = `"This '{isn't}' obvious"`;

exports[`pegParse({ captureLocation: true }) can print AST from 'this is {count,plural,offset:1 one{{count, number} dog} other{{count, number} dogs}}' 1`] = `"this is {count,plural,offset:1 one{{count, number} dog} other{{count, number} dogs}}"`;
