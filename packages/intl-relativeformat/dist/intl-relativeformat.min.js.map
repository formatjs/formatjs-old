{"version":3,"file":"intl-relativeformat.min.js","sources":["intl-relativeformat/node_modules/intl-messageformat/src/utils.js","intl-relativeformat/node_modules/intl-messageformat/src/compiler.js","intl-relativeformat/node_modules/intl-messageformat/src/core.js","intl-relativeformat/src/diff.js","intl-relativeformat/src/core.js","intl-relativeformat/src/es5.js","intl-relativeformat/node_modules/intl-messageformat/src/es5.js","intl-relativeformat/node_modules/intl-messageformat/node_modules/intl-messageformat-parser/src/parser.js","intl-relativeformat/node_modules/intl-messageformat/src/en.js","intl-relativeformat/node_modules/intl-messageformat/src/main.js","intl-relativeformat/src/en.js","intl-relativeformat/src/main.js"],"names":["$$utils$$extend","obj","i","len","source","key","sources","Array","prototype","slice","call","arguments","length","$$utils$$hop","$$compiler$$Compiler","locales","formats","pluralFn","this","$$compiler$$StringFormat","id","$$compiler$$PluralFormat","offset","options","$$compiler$$PluralOffsetString","numberFormat","string","$$compiler$$SelectFormat","$$core1$$MessageFormat","message","ast","__parse","type","TypeError","_mergeFormats","value","_resolveLocale","__localeData__","_locale","pluralRuleFunction","pattern","_compilePattern","messageFormat","format","values","_format","$$diff$$daysToYears","days","$$core$$RelativeFormat","$$es5$$isArray","concat","style","_resolveStyle","units","_isValidUnits","$$es5$$objCreate","relativeFormat","date","$$es5$$hop","Object","hasOwnProperty","$$es5$$toString","toString","$$es5$$realDefineProp","defineProperty","e","$$es5$$defineProperty","__defineGetter__","name","desc","get","create","proto","props","F","k","$$es5$$arrIndexOf","indexOf","search","fromIndex","arr","max","isArray","$$es5$$dateNow","Date","now","getTime","$$es51$$realDefineProp","$$es51$$defineProperty","$$es51$$objCreate","compile","pluralStack","currentPlural","pluralNumberFormat","compileMessage","Error","element","elements","push","compileMessageText","compileArgument","test","Intl","NumberFormat","replace","number","DateTimeFormat","time","compileOptions","optionsHash","option","selector","pop","String","getOption","other","peg$subclass","child","parent","ctor","constructor","SyntaxError","expected","found","line","column","parse","input","peg$computePosDetails","pos","advance","details","startPos","endPos","p","ch","charAt","seenCR","peg$cachedPos","peg$cachedPosDetails","peg$fail","peg$maxFailPos","peg$currPos","peg$maxFailExpected","peg$buildException","cleanupExpected","sort","a","b","description","splice","buildMessage","stringEscape","s","hex","charCodeAt","toUpperCase","expectedDesc","foundDesc","expectedDescs","join","posDetails","peg$parsestart","s0","peg$parsemessageFormatPattern","s1","s2","peg$parsemessageFormatElement","peg$FAILED","peg$reportedPos","peg$c1","peg$parsemessageTextElement","peg$parseargumentElement","peg$parsemessageText","s3","s4","s5","peg$parse_","peg$parsechars","peg$c2","peg$c3","peg$parsews","substring","peg$c4","peg$parseargument","peg$parsenumber","peg$c5","peg$silentFails","peg$c6","s6","s7","s8","peg$c7","peg$c8","peg$c10","peg$c11","peg$parseelementFormat","peg$c9","peg$c12","peg$c13","peg$c14","peg$parsesimpleFormat","peg$parsepluralFormat","peg$parseselectFormat","substr","peg$c15","peg$c16","peg$c17","peg$c18","peg$c19","peg$c20","peg$c21","peg$c22","peg$c23","peg$parseoffset","peg$parseoptionalFormatPattern","peg$c24","peg$c25","peg$c26","peg$c27","peg$parseselector","peg$c28","peg$c29","peg$c30","peg$c31","peg$c32","peg$c33","peg$c35","peg$c36","peg$c34","peg$c37","peg$parsedigit","peg$c38","peg$c39","peg$parsehexDigit","peg$c40","peg$c41","peg$c42","peg$c43","peg$c44","peg$c45","peg$c46","peg$parsechar","peg$c47","peg$c48","peg$c49","peg$c50","peg$c51","peg$c52","peg$c53","peg$c54","peg$c55","peg$c56","peg$c57","peg$c58","peg$c59","peg$c60","peg$c61","peg$result","peg$startRuleFunctions","start","peg$startRuleFunction","text","j","outerLen","inner","innerLen","messageText","digits","parseInt","fromCharCode","chars","startRule","enumerable","currency","percent","short","month","day","year","medium","long","full","weekday","hour","minute","second","timeZoneName","data","locale","toLowerCase","split","intl$messageformat$parser$$default","writable","undefined","resolvedOptions","compiler","$$compiler$$default","part","result","defaults","mergedType","mergedFormats","defaultLocale","localeData","n","Math","floor","abs","v","__addLocaleData","$$en1$$default","$$diff$$round","round","dfrom","dto","millisecond","week","rawYears","$$core$$FIELDS","$$core$$STYLES","fields","_options","_compileMessage","_locales","resolvedLocale","field","relativeTime","future","past","intl$messageformat$$default","isFinite","RangeError","diffReport","$$diff$$default","_selectUnits","diffInUnits","relativeUnits","_resolveRelativeUnits","_resolveMessage","0","when","suggestion","hop","messages","_messages","diff","relative","l","thresholds","displayName","one","1","-1","$$en$$default"],"mappings":"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","sourcesContent":["/*\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\nCopyrights licensed under the New BSD License.\nSee the accompanying LICENSE file for terms.\n*/\n\n/* jslint esnext: true */\n\nexport var hop = Object.prototype.hasOwnProperty;\n\nexport function extend(obj) {\n    var sources = Array.prototype.slice.call(arguments, 1),\n        i, len, source, key;\n\n    for (i = 0, len = sources.length; i < len; i += 1) {\n        source = sources[i];\n        if (!source) { continue; }\n\n        for (key in source) {\n            if (hop.call(source, key)) {\n                obj[key] = source[key];\n            }\n        }\n    }\n\n    return obj;\n}\n","/*\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\nCopyrights licensed under the New BSD License.\nSee the accompanying LICENSE file for terms.\n*/\n\n/* jslint esnext: true */\n\nexport default Compiler;\n\nfunction Compiler(locales, formats, pluralFn) {\n    this.locales  = locales;\n    this.formats  = formats;\n    this.pluralFn = pluralFn;\n}\n\nCompiler.prototype.compile = function (ast) {\n    this.pluralStack        = [];\n    this.currentPlural      = null;\n    this.pluralNumberFormat = null;\n\n    return this.compileMessage(ast);\n};\n\nCompiler.prototype.compileMessage = function (ast) {\n    if (!(ast && ast.type === 'messageFormatPattern')) {\n        throw new Error('Message AST is not of type: \"messageFormatPattern\"');\n    }\n\n    var elements = ast.elements,\n        pattern  = [];\n\n    var i, len, element;\n\n    for (i = 0, len = elements.length; i < len; i += 1) {\n        element = elements[i];\n\n        switch (element.type) {\n            case 'messageTextElement':\n                pattern.push(this.compileMessageText(element));\n                break;\n\n            case 'argumentElement':\n                pattern.push(this.compileArgument(element));\n                break;\n\n            default:\n                throw new Error('Message element does not have a valid type');\n        }\n    }\n\n    return pattern;\n};\n\nCompiler.prototype.compileMessageText = function (element) {\n    // When this `element` is part of plural sub-pattern and its value contains\n    // an unescaped '#', use a `PluralOffsetString` helper to properly output\n    // the number with the correct offset in the string.\n    if (this.currentPlural && /(^|[^\\\\])#/g.test(element.value)) {\n        // Create a cache a NumberFormat instance that can be reused for any\n        // PluralOffsetString instance in this message.\n        if (!this.pluralNumberFormat) {\n            this.pluralNumberFormat = new Intl.NumberFormat(this.locales);\n        }\n\n        return new PluralOffsetString(\n                this.currentPlural.id,\n                this.currentPlural.format.offset,\n                this.pluralNumberFormat,\n                element.value);\n    }\n\n    // Unescape the escaped '#'s in the message text.\n    return element.value.replace(/\\\\#/g, '#');\n};\n\nCompiler.prototype.compileArgument = function (element) {\n    var format = element.format;\n\n    if (!format) {\n        return new StringFormat(element.id);\n    }\n\n    var formats  = this.formats,\n        locales  = this.locales,\n        pluralFn = this.pluralFn,\n        options;\n\n    switch (format.type) {\n        case 'numberFormat':\n            options = formats.number[format.style];\n            return {\n                id    : element.id,\n                format: new Intl.NumberFormat(locales, options).format\n            };\n\n        case 'dateFormat':\n            options = formats.date[format.style];\n            return {\n                id    : element.id,\n                format: new Intl.DateTimeFormat(locales, options).format\n            };\n\n        case 'timeFormat':\n            options = formats.time[format.style];\n            return {\n                id    : element.id,\n                format: new Intl.DateTimeFormat(locales, options).format\n            };\n\n        case 'pluralFormat':\n            options = this.compileOptions(element);\n            return new PluralFormat(element.id, format.offset, options, pluralFn);\n\n        case 'selectFormat':\n            options = this.compileOptions(element);\n            return new SelectFormat(element.id, options);\n\n        default:\n            throw new Error('Message element does not have a valid format type');\n    }\n};\n\nCompiler.prototype.compileOptions = function (element) {\n    var format      = element.format,\n        options     = format.options,\n        optionsHash = {};\n\n    // Save the current plural element, if any, then set it to a new value when\n    // compiling the options sub-patterns. This conform's the spec's algorithm\n    // for handling `\"#\"` synax in message text.\n    this.pluralStack.push(this.currentPlural);\n    this.currentPlural = format.type === 'pluralFormat' ? element : null;\n\n    var i, len, option;\n\n    for (i = 0, len = options.length; i < len; i += 1) {\n        option = options[i];\n\n        // Compile the sub-pattern and save it under the options's selector.\n        optionsHash[option.selector] = this.compileMessage(option.value);\n    }\n\n    // Pop the plural stack to put back the original currnet plural value.\n    this.currentPlural = this.pluralStack.pop();\n\n    return optionsHash;\n};\n\n// -- Compiler Helper Classes --------------------------------------------------\n\nfunction StringFormat(id) {\n    this.id = id;\n}\n\nStringFormat.prototype.format = function (value) {\n    if (!value) {\n        return '';\n    }\n\n    return typeof value === 'string' ? value : String(value);\n};\n\nfunction PluralFormat(id, offset, options, pluralFn) {\n    this.id       = id;\n    this.offset   = offset;\n    this.options  = options;\n    this.pluralFn = pluralFn;\n}\n\nPluralFormat.prototype.getOption = function (value) {\n    var options = this.options;\n\n    var option = options['=' + value] ||\n            options[this.pluralFn(value - this.offset)];\n\n    return option || options.other;\n};\n\nfunction PluralOffsetString(id, offset, numberFormat, string) {\n    this.id           = id;\n    this.offset       = offset;\n    this.numberFormat = numberFormat;\n    this.string       = string;\n}\n\nPluralOffsetString.prototype.format = function (value) {\n    var number = this.numberFormat.format(value - this.offset);\n\n    return this.string\n            .replace(/(^|[^\\\\])#/g, '$1' + number)\n            .replace(/\\\\#/g, '#');\n};\n\nfunction SelectFormat(id, options) {\n    this.id      = id;\n    this.options = options;\n}\n\nSelectFormat.prototype.getOption = function (value) {\n    var options = this.options;\n    return options[value] || options.other;\n};\n","/*\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\nCopyrights licensed under the New BSD License.\nSee the accompanying LICENSE file for terms.\n*/\n\n/* jslint esnext: true */\n\nimport {extend, hop} from './utils';\nimport {defineProperty, objCreate} from './es5';\nimport Compiler from './compiler';\nimport parser from 'intl-messageformat-parser';\n\nexport default MessageFormat;\n\n// -- MessageFormat --------------------------------------------------------\n\nfunction MessageFormat(message, locales, formats) {\n    // Parse string messages into an AST.\n    var ast = typeof message === 'string' ?\n            MessageFormat.__parse(message) : message;\n\n    if (!(ast && ast.type === 'messageFormatPattern')) {\n        throw new TypeError('A message must be provided as a String or AST.');\n    }\n\n    // Creates a new object with the specified `formats` merged with the default\n    // formats.\n    formats = this._mergeFormats(MessageFormat.formats, formats);\n\n    // Defined first because it's used to build the format pattern.\n    defineProperty(this, '_locale',  {value: this._resolveLocale(locales)});\n\n    var pluralFn = MessageFormat.__localeData__[this._locale].pluralRuleFunction;\n\n    // Compile the `ast` to a pattern that is highly optimized for repeated\n    // `format()` invocations. **Note:** This passes the `locales` set provided\n    // to the constructor instead of just the resolved locale.\n    var pattern = this._compilePattern(ast, locales, formats, pluralFn);\n\n    // \"Bind\" `format()` method to `this` so it can be passed by reference like\n    // the other `Intl` APIs.\n    var messageFormat = this;\n    this.format = function (values) {\n        return messageFormat._format(pattern, values);\n    };\n}\n\n// Default format options used as the prototype of the `formats` provided to the\n// constructor. These are used when constructing the internal Intl.NumberFormat\n// and Intl.DateTimeFormat instances.\ndefineProperty(MessageFormat, 'formats', {\n    enumerable: true,\n\n    value: {\n        number: {\n            'currency': {\n                style: 'currency'\n            },\n\n            'percent': {\n                style: 'percent'\n            }\n        },\n\n        date: {\n            'short': {\n                month: 'numeric',\n                day  : 'numeric',\n                year : '2-digit'\n            },\n\n            'medium': {\n                month: 'short',\n                day  : 'numeric',\n                year : 'numeric'\n            },\n\n            'long': {\n                month: 'long',\n                day  : 'numeric',\n                year : 'numeric'\n            },\n\n            'full': {\n                weekday: 'long',\n                month  : 'long',\n                day    : 'numeric',\n                year   : 'numeric'\n            }\n        },\n\n        time: {\n            'short': {\n                hour  : 'numeric',\n                minute: 'numeric'\n            },\n\n            'medium':  {\n                hour  : 'numeric',\n                minute: 'numeric',\n                second: 'numeric'\n            },\n\n            'long': {\n                hour        : 'numeric',\n                minute      : 'numeric',\n                second      : 'numeric',\n                timeZoneName: 'short'\n            },\n\n            'full': {\n                hour        : 'numeric',\n                minute      : 'numeric',\n                second      : 'numeric',\n                timeZoneName: 'short'\n            }\n        }\n    }\n});\n\n// Define internal private properties for dealing with locale data.\ndefineProperty(MessageFormat, '__localeData__', {value: objCreate(null)});\ndefineProperty(MessageFormat, '__addLocaleData', {value: function (data) {\n    if (!(data && data.locale)) {\n        throw new Error(\n            'Locale data provided to IntlMessageFormat is missing a ' +\n            '`locale` property'\n        );\n    }\n\n    if (!data.pluralRuleFunction) {\n        throw new Error(\n            'Locale data provided to IntlMessageFormat is missing a ' +\n            '`pluralRuleFunction` property'\n        );\n    }\n\n    // Message format locale data only requires the first part of the tag.\n    var locale = data.locale.toLowerCase().split('-')[0];\n\n    MessageFormat.__localeData__[locale] = data;\n}});\n\n// Defines `__parse()` static method as an exposed private.\ndefineProperty(MessageFormat, '__parse', {value: parser.parse});\n\n// Define public `defaultLocale` property which defaults to English, but can be\n// set by the developer.\ndefineProperty(MessageFormat, 'defaultLocale', {\n    enumerable: true,\n    writable  : true,\n    value     : undefined\n});\n\nMessageFormat.prototype.resolvedOptions = function () {\n    // TODO: Provide anything else?\n    return {\n        locale: this._locale\n    };\n};\n\nMessageFormat.prototype._compilePattern = function (ast, locales, formats, pluralFn) {\n    var compiler = new Compiler(locales, formats, pluralFn);\n    return compiler.compile(ast);\n};\n\nMessageFormat.prototype._format = function (pattern, values) {\n    var result = '',\n        i, len, part, id, value;\n\n    for (i = 0, len = pattern.length; i < len; i += 1) {\n        part = pattern[i];\n\n        // Exist early for string parts.\n        if (typeof part === 'string') {\n            result += part;\n            continue;\n        }\n\n        id = part.id;\n\n        // Enforce that all required values are provided by the caller.\n        if (!(values && hop.call(values, id))) {\n            throw new Error('A value must be provided for: ' + id);\n        }\n\n        value = values[id];\n\n        // Recursively format plural and select parts' option — which can be a\n        // nested pattern structure. The choosing of the option to use is\n        // abstracted-by and delegated-to the part helper object.\n        if (part.options) {\n            result += this._format(part.getOption(value), values);\n        } else {\n            result += part.format(value);\n        }\n    }\n\n    return result;\n};\n\nMessageFormat.prototype._mergeFormats = function (defaults, formats) {\n    var mergedFormats = {},\n        type, mergedType;\n\n    for (type in defaults) {\n        if (!hop.call(defaults, type)) { continue; }\n\n        mergedFormats[type] = mergedType = objCreate(defaults[type]);\n\n        if (formats && hop.call(formats, type)) {\n            extend(mergedType, formats[type]);\n        }\n    }\n\n    return mergedFormats;\n};\n\nMessageFormat.prototype._resolveLocale = function (locales) {\n    if (!locales) {\n        locales = MessageFormat.defaultLocale;\n    }\n\n    if (typeof locales === 'string') {\n        locales = [locales];\n    }\n\n    var localeData = MessageFormat.__localeData__;\n    var i, len, locale;\n\n    for (i = 0, len = locales.length; i < len; i += 1) {\n        // We just need the root part of the langage tag.\n        locale = locales[i].split('-')[0].toLowerCase();\n\n        // Validate that the langage tag is structurally valid.\n        if (!/[a-z]{2,3}/.test(locale)) {\n            throw new Error(\n                'Language tag provided to IntlMessageFormat is not ' +\n                'structrually valid: ' + locale\n            );\n        }\n\n        // Return the first locale for which we have CLDR data registered.\n        if (hop.call(localeData, locale)) {\n            return locale;\n        }\n    }\n\n    throw new Error(\n        'No locale data has been added to IntlMessageFormat for: ' +\n        locales.join(', ')\n    );\n};\n","/*\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\nCopyrights licensed under the New BSD License.\nSee the accompanying LICENSE file for terms.\n*/\n\n/* jslint esnext: true */\n\nvar round = Math.round;\n\nfunction daysToYears (days) {\n    // 400 years have 146097 days (taking into account leap year rules)\n    return days * 400 / 146097;\n}\n\nexport default function (dfrom, dto) {\n    // Convert to ms timestamps.\n    dfrom = +dfrom;\n    dto   = +dto;\n\n    var millisecond = round(dto - dfrom),\n        second      = round(millisecond / 1000),\n        minute      = round(second / 60),\n        hour        = round(minute / 60),\n        day         = round(hour / 24),\n        week        = round(day / 7);\n\n    var rawYears = daysToYears(day),\n        month    = round(rawYears * 12),\n        year     = round(rawYears);\n\n    return {\n        millisecond: millisecond,\n        second     : second,\n        minute     : minute,\n        hour       : hour,\n        day        : day,\n        week       : week,\n        month      : month,\n        year       : year\n    };\n}\n","/*\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\nCopyrights licensed under the New BSD License.\nSee the accompanying LICENSE file for terms.\n*/\n\n/* jslint esnext: true */\n\nimport {defineProperty, objCreate, arrIndexOf, isArray, dateNow} from './es5';\nimport IntlMessageFormat from 'intl-messageformat';\nimport diff from './diff';\n\nexport default RelativeFormat;\n\n// -----------------------------------------------------------------------------\n\nvar FIELDS = ['second', 'minute', 'hour', 'day', 'month', 'year'];\nvar STYLES = ['best fit', 'numeric'];\n\n// -- RelativeFormat -----------------------------------------------------------\n\nfunction RelativeFormat(locales, options) {\n    options = options || {};\n\n    // Make a copy of `locales` if it's an array, so that it doesn't change\n    // since it's used lazily.\n    if (isArray(locales)) {\n        locales = locales.concat();\n    }\n\n    defineProperty(this, '_locale', {value: this._resolveLocale(locales)});\n    defineProperty(this, '_locales', {value: locales});\n    defineProperty(this, '_options', {value: {\n        style: this._resolveStyle(options.style),\n        units: this._isValidUnits(options.units) && options.units\n    }});\n\n    defineProperty(this, '_messages', {value: objCreate(null)});\n\n    // \"Bind\" `format()` method to `this` so it can be passed by reference like\n    // the other `Intl` APIs.\n    var relativeFormat = this;\n    this.format = function format(date) {\n        return relativeFormat._format(date);\n    };\n}\n\n// Define internal private properties for dealing with locale data.\ndefineProperty(RelativeFormat, '__localeData__', {value: objCreate(null)});\ndefineProperty(RelativeFormat, '__addLocaleData', {value: function (data) {\n    if (!(data && data.locale)) {\n        throw new Error(\n            'Locale data provided to IntlRelativeFormat is missing a ' +\n            '`locale` property value'\n        );\n    }\n\n    if (!data.fields) {\n        throw new Error(\n            'Locale data provided to IntlRelativeFormat is missing a ' +\n            '`fields` property value'\n        );\n    }\n\n    // Add data to IntlMessageFormat.\n    IntlMessageFormat.__addLocaleData(data);\n\n    // Relative format locale data only requires the first part of the tag.\n    var locale = data.locale.toLowerCase().split('-')[0];\n\n    RelativeFormat.__localeData__[locale] = data;\n}});\n\n// Define public `defaultLocale` property which can be set by the developer, or\n// it will be set when the first RelativeFormat instance is created by leveraging\n// the resolved locale from `Intl`.\ndefineProperty(RelativeFormat, 'defaultLocale', {\n    enumerable: true,\n    writable  : true,\n    value     : undefined\n});\n\n// Define public `thresholds` property which can be set by the developer, and\n// defaults to relative time thresholds from moment.js.\ndefineProperty(RelativeFormat, 'thresholds', {\n    enumerable: true,\n\n    value: {\n        second: 45,  // seconds to minute\n        minute: 45,  // minutes to hour\n        hour  : 22,  // hours to day\n        day   : 26,  // days to month\n        month : 11   // months to year\n    }\n});\n\nRelativeFormat.prototype.resolvedOptions = function () {\n    return {\n        locale: this._locale,\n        style : this._options.style,\n        units : this._options.units\n    };\n};\n\nRelativeFormat.prototype._compileMessage = function (units) {\n    // `this._locales` is the original set of locales the user specificed to the\n    // constructor, while `this._locale` is the resolved root locale.\n    var locales        = this._locales;\n    var resolvedLocale = this._locale;\n\n    var localeData   = RelativeFormat.__localeData__;\n    var field        = localeData[resolvedLocale].fields[units];\n    var relativeTime = field.relativeTime;\n    var future       = '';\n    var past         = '';\n    var i;\n\n    for (i in relativeTime.future) {\n        if (relativeTime.future.hasOwnProperty(i)) {\n            future += ' ' + i + ' {' +\n                relativeTime.future[i].replace('{0}', '#') + '}';\n        }\n    }\n\n    for (i in relativeTime.past) {\n        if (relativeTime.past.hasOwnProperty(i)) {\n            past += ' ' + i + ' {' +\n                relativeTime.past[i].replace('{0}', '#') + '}';\n        }\n    }\n\n    var message = '{when, select, future {{0, plural, ' + future + '}}' +\n                                 'past {{0, plural, ' + past + '}}}';\n\n    // Create the synthetic IntlMessageFormat instance using the original\n    // locales value specified by the user when constructing the the parent\n    // IntlRelativeFormat instance.\n    return new IntlMessageFormat(message, locales);\n};\n\nRelativeFormat.prototype._format = function (date) {\n    var now = dateNow();\n\n    if (date === undefined) {\n        date = now;\n    }\n\n    // Determine if the `date` is valid, and throw a similar error to what\n    // `Intl.DateTimeFormat#format()` would throw.\n    if (!isFinite(date)) {\n        throw new RangeError(\n            'The date value provided to IntlRelativeFormat#format() is not ' +\n            'in valid range.'\n        );\n    }\n\n    var diffReport  = diff(now, date);\n    var units       = this._options.units || this._selectUnits(diffReport);\n    var diffInUnits = diffReport[units];\n\n    if (this._options.style !== 'numeric') {\n        var relativeUnits = this._resolveRelativeUnits(diffInUnits, units);\n        if (relativeUnits) {\n            return relativeUnits;\n        }\n    }\n\n    return this._resolveMessage(units).format({\n        '0' : Math.abs(diffInUnits),\n        when: diffInUnits < 0 ? 'past' : 'future'\n    });\n};\n\nRelativeFormat.prototype._isValidUnits = function (units) {\n    if (!units || arrIndexOf.call(FIELDS, units) >= 0) {\n        return true;\n    }\n\n    if (typeof units === 'string') {\n        var suggestion = /s$/.test(units) && units.substr(0, units.length - 1);\n        if (suggestion && arrIndexOf.call(FIELDS, suggestion) >= 0) {\n            throw new Error(\n                '\"' + units + '\" is not a valid IntlRelativeFormat `units` ' +\n                'value, did you mean: ' + suggestion\n            );\n        }\n    }\n\n    throw new Error(\n        '\"' + units + '\" is not a valid IntlRelativeFormat `units` value, it ' +\n        'must be one of: \"' + FIELDS.join('\", \"') + '\"'\n    );\n};\n\nRelativeFormat.prototype._resolveLocale = function (locales) {\n    if (!locales) {\n        locales = RelativeFormat.defaultLocale;\n    }\n\n    if (typeof locales === 'string') {\n        locales = [locales];\n    }\n\n    var hop        = Object.prototype.hasOwnProperty;\n    var localeData = RelativeFormat.__localeData__;\n    var i, len, locale;\n\n    for (i = 0, len = locales.length; i < len; i += 1) {\n        // We just need the root part of the language tag.\n        locale = locales[i].split('-')[0].toLowerCase();\n\n        // Validate that the language tag is structurally valid.\n        if (!/[a-z]{2,3}/.test(locale)) {\n            throw new Error(\n                'Language tag provided to IntlRelativeFormat is not ' +\n                'structrually valid: ' + locale\n            );\n        }\n\n        // Return the first locale for which we have CLDR data registered.\n        if (hop.call(localeData, locale)) {\n            return locale;\n        }\n    }\n\n    throw new Error(\n        'No locale data has been added to IntlRelativeFormat for: ' +\n        locales.join(', ')\n    );\n};\n\nRelativeFormat.prototype._resolveMessage = function (units) {\n    var messages = this._messages;\n\n    // Create a new synthetic message based on the locale data from CLDR.\n    if (!messages[units]) {\n        messages[units] = this._compileMessage(units);\n    }\n\n    return messages[units];\n};\n\nRelativeFormat.prototype._resolveRelativeUnits = function (diff, units) {\n    var field = RelativeFormat.__localeData__[this._locale].fields[units];\n\n    if (field.relative) {\n        return field.relative[diff];\n    }\n};\n\nRelativeFormat.prototype._resolveStyle = function (style) {\n    // Default to \"best fit\" style.\n    if (!style) {\n        return STYLES[0];\n    }\n\n    if (arrIndexOf.call(STYLES, style) >= 0) {\n        return style;\n    }\n\n    throw new Error(\n        '\"' + style + '\" is not a valid IntlRelativeFormat `style` value, it ' +\n        'must be one of: \"' + STYLES.join('\", \"') + '\"'\n    );\n};\n\nRelativeFormat.prototype._selectUnits = function (diffReport) {\n    var i, l, units;\n\n    for (i = 0, l = FIELDS.length; i < l; i += 1) {\n        units = FIELDS[i];\n\n        if (Math.abs(diffReport[units]) < RelativeFormat.thresholds[units]) {\n            break;\n        }\n    }\n\n    return units;\n};\n","/*\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\nCopyrights licensed under the New BSD License.\nSee the accompanying LICENSE file for terms.\n*/\n\n/* jslint esnext: true */\n\nexport {defineProperty, objCreate, arrIndexOf, isArray, dateNow};\n\n// Purposely using the same implementation as the Intl.js `Intl` polyfill.\n// Copyright 2013 Andy Earnshaw, MIT License\n\nvar hop = Object.prototype.hasOwnProperty;\nvar toString = Object.prototype.toString;\n\nvar realDefineProp = (function () {\n    try { return !!Object.defineProperty({}, 'a', {}); }\n    catch (e) { return false; }\n})();\n\nvar es3 = !realDefineProp && !Object.prototype.__defineGetter__;\n\nvar defineProperty = realDefineProp ? Object.defineProperty :\n        function (obj, name, desc) {\n\n    if ('get' in desc && obj.__defineGetter__) {\n        obj.__defineGetter__(name, desc.get);\n    } else if (!hop.call(obj, name) || 'value' in desc) {\n        obj[name] = desc.value;\n    }\n};\n\nvar objCreate = Object.create || function (proto, props) {\n    var obj, k;\n\n    function F() {}\n    F.prototype = proto;\n    obj = new F();\n\n    for (k in props) {\n        if (hop.call(props, k)) {\n            defineProperty(obj, k, props[k]);\n        }\n    }\n\n    return obj;\n};\n\nvar arrIndexOf = Array.prototype.indexOf || function (search, fromIndex) {\n    /*jshint validthis:true */\n    var arr = this;\n    if (!arr.length) {\n        return -1;\n    }\n\n    for (var i = fromIndex || 0, max = arr.length; i < max; i++) {\n        if (arr[i] === search) {\n            return i;\n        }\n    }\n\n    return -1;\n};\n\nvar isArray = Array.isArray || function (obj) {\n    return toString.call(obj) === '[object Array]';\n};\n\nvar dateNow = Date.now || function () {\n    return new Date().getTime();\n};\n","/*\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\nCopyrights licensed under the New BSD License.\nSee the accompanying LICENSE file for terms.\n*/\n\n/* jslint esnext: true */\n\nimport {hop} from './utils';\n\nexport {defineProperty, objCreate};\n\n// Purposely using the same implementation as the Intl.js `Intl` polyfill.\n// Copyright 2013 Andy Earnshaw, MIT License\n\nvar realDefineProp = (function () {\n    try { return !!Object.defineProperty({}, 'a', {}); }\n    catch (e) { return false; }\n})();\n\nvar es3 = !realDefineProp && !Object.prototype.__defineGetter__;\n\nvar defineProperty = realDefineProp ? Object.defineProperty :\n        function (obj, name, desc) {\n\n    if ('get' in desc && obj.__defineGetter__) {\n        obj.__defineGetter__(name, desc.get);\n    } else if (!hop.call(obj, name) || 'value' in desc) {\n        obj[name] = desc.value;\n    }\n};\n\nvar objCreate = Object.create || function (proto, props) {\n    var obj, k;\n\n    function F() {}\n    F.prototype = proto;\n    obj = new F();\n\n    for (k in props) {\n        if (hop.call(props, k)) {\n            defineProperty(obj, k, props[k]);\n        }\n    }\n\n    return obj;\n};\n","export default (function() {\n  /*\n   * Generated by PEG.js 0.8.0.\n   *\n   * http://pegjs.majda.cz/\n   */\n\n  function peg$subclass(child, parent) {\n    function ctor() { this.constructor = child; }\n    ctor.prototype = parent.prototype;\n    child.prototype = new ctor();\n  }\n\n  function SyntaxError(message, expected, found, offset, line, column) {\n    this.message  = message;\n    this.expected = expected;\n    this.found    = found;\n    this.offset   = offset;\n    this.line     = line;\n    this.column   = column;\n\n    this.name     = \"SyntaxError\";\n  }\n\n  peg$subclass(SyntaxError, Error);\n\n  function parse(input) {\n    var options = arguments.length > 1 ? arguments[1] : {},\n\n        peg$FAILED = {},\n\n        peg$startRuleFunctions = { start: peg$parsestart },\n        peg$startRuleFunction  = peg$parsestart,\n\n        peg$c0 = [],\n        peg$c1 = function(elements) {\n                return {\n                    type    : 'messageFormatPattern',\n                    elements: elements\n                };\n            },\n        peg$c2 = peg$FAILED,\n        peg$c3 = function(text) {\n                var string = '',\n                    i, j, outerLen, inner, innerLen;\n\n                for (i = 0, outerLen = text.length; i < outerLen; i += 1) {\n                    inner = text[i];\n\n                    for (j = 0, innerLen = inner.length; j < innerLen; j += 1) {\n                        string += inner[j];\n                    }\n                }\n\n                return string;\n            },\n        peg$c4 = function(messageText) {\n                return {\n                    type : 'messageTextElement',\n                    value: messageText\n                };\n            },\n        peg$c5 = /^[^ \\t\\n\\r,.+={}#]/,\n        peg$c6 = { type: \"class\", value: \"[^ \\\\t\\\\n\\\\r,.+={}#]\", description: \"[^ \\\\t\\\\n\\\\r,.+={}#]\" },\n        peg$c7 = \"{\",\n        peg$c8 = { type: \"literal\", value: \"{\", description: \"\\\"{\\\"\" },\n        peg$c9 = null,\n        peg$c10 = \",\",\n        peg$c11 = { type: \"literal\", value: \",\", description: \"\\\",\\\"\" },\n        peg$c12 = \"}\",\n        peg$c13 = { type: \"literal\", value: \"}\", description: \"\\\"}\\\"\" },\n        peg$c14 = function(id, format) {\n                return {\n                    type  : 'argumentElement',\n                    id    : id,\n                    format: format && format[2]\n                };\n            },\n        peg$c15 = \"number\",\n        peg$c16 = { type: \"literal\", value: \"number\", description: \"\\\"number\\\"\" },\n        peg$c17 = \"date\",\n        peg$c18 = { type: \"literal\", value: \"date\", description: \"\\\"date\\\"\" },\n        peg$c19 = \"time\",\n        peg$c20 = { type: \"literal\", value: \"time\", description: \"\\\"time\\\"\" },\n        peg$c21 = function(type, style) {\n                return {\n                    type : type + 'Format',\n                    style: style && style[2]\n                };\n            },\n        peg$c22 = \"plural\",\n        peg$c23 = { type: \"literal\", value: \"plural\", description: \"\\\"plural\\\"\" },\n        peg$c24 = function(offset, options) {\n                return {\n                    type   : 'pluralFormat',\n                    offset : offset || 0,\n                    options: options\n                }\n            },\n        peg$c25 = \"select\",\n        peg$c26 = { type: \"literal\", value: \"select\", description: \"\\\"select\\\"\" },\n        peg$c27 = function(options) {\n                return {\n                    type   : 'selectFormat',\n                    options: options\n                }\n            },\n        peg$c28 = \"=\",\n        peg$c29 = { type: \"literal\", value: \"=\", description: \"\\\"=\\\"\" },\n        peg$c30 = function(selector, pattern) {\n                return {\n                    type    : 'optionalFormatPattern',\n                    selector: selector,\n                    value   : pattern\n                };\n            },\n        peg$c31 = \"offset:\",\n        peg$c32 = { type: \"literal\", value: \"offset:\", description: \"\\\"offset:\\\"\" },\n        peg$c33 = function(number) {\n                return number;\n            },\n        peg$c34 = { type: \"other\", description: \"whitespace\" },\n        peg$c35 = /^[ \\t\\n\\r]/,\n        peg$c36 = { type: \"class\", value: \"[ \\\\t\\\\n\\\\r]\", description: \"[ \\\\t\\\\n\\\\r]\" },\n        peg$c37 = { type: \"other\", description: \"optionalWhitespace\" },\n        peg$c38 = /^[0-9]/,\n        peg$c39 = { type: \"class\", value: \"[0-9]\", description: \"[0-9]\" },\n        peg$c40 = /^[0-9a-f]/i,\n        peg$c41 = { type: \"class\", value: \"[0-9a-f]i\", description: \"[0-9a-f]i\" },\n        peg$c42 = \"0\",\n        peg$c43 = { type: \"literal\", value: \"0\", description: \"\\\"0\\\"\" },\n        peg$c44 = /^[1-9]/,\n        peg$c45 = { type: \"class\", value: \"[1-9]\", description: \"[1-9]\" },\n        peg$c46 = function(digits) {\n            return parseInt(digits, 10);\n        },\n        peg$c47 = /^[^{}\\\\\\0-\\x1F \\t\\n\\r]/,\n        peg$c48 = { type: \"class\", value: \"[^{}\\\\\\\\\\\\0-\\\\x1F \\\\t\\\\n\\\\r]\", description: \"[^{}\\\\\\\\\\\\0-\\\\x1F \\\\t\\\\n\\\\r]\" },\n        peg$c49 = \"\\\\#\",\n        peg$c50 = { type: \"literal\", value: \"\\\\#\", description: \"\\\"\\\\\\\\#\\\"\" },\n        peg$c51 = function() { return '\\\\#'; },\n        peg$c52 = \"\\\\{\",\n        peg$c53 = { type: \"literal\", value: \"\\\\{\", description: \"\\\"\\\\\\\\{\\\"\" },\n        peg$c54 = function() { return '\\u007B'; },\n        peg$c55 = \"\\\\}\",\n        peg$c56 = { type: \"literal\", value: \"\\\\}\", description: \"\\\"\\\\\\\\}\\\"\" },\n        peg$c57 = function() { return '\\u007D'; },\n        peg$c58 = \"\\\\u\",\n        peg$c59 = { type: \"literal\", value: \"\\\\u\", description: \"\\\"\\\\\\\\u\\\"\" },\n        peg$c60 = function(digits) {\n                return String.fromCharCode(parseInt(digits, 16));\n            },\n        peg$c61 = function(chars) { return chars.join(''); },\n\n        peg$currPos          = 0,\n        peg$reportedPos      = 0,\n        peg$cachedPos        = 0,\n        peg$cachedPosDetails = { line: 1, column: 1, seenCR: false },\n        peg$maxFailPos       = 0,\n        peg$maxFailExpected  = [],\n        peg$silentFails      = 0,\n\n        peg$result;\n\n    if (\"startRule\" in options) {\n      if (!(options.startRule in peg$startRuleFunctions)) {\n        throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n      }\n\n      peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n    }\n\n    function text() {\n      return input.substring(peg$reportedPos, peg$currPos);\n    }\n\n    function offset() {\n      return peg$reportedPos;\n    }\n\n    function line() {\n      return peg$computePosDetails(peg$reportedPos).line;\n    }\n\n    function column() {\n      return peg$computePosDetails(peg$reportedPos).column;\n    }\n\n    function expected(description) {\n      throw peg$buildException(\n        null,\n        [{ type: \"other\", description: description }],\n        peg$reportedPos\n      );\n    }\n\n    function error(message) {\n      throw peg$buildException(message, null, peg$reportedPos);\n    }\n\n    function peg$computePosDetails(pos) {\n      function advance(details, startPos, endPos) {\n        var p, ch;\n\n        for (p = startPos; p < endPos; p++) {\n          ch = input.charAt(p);\n          if (ch === \"\\n\") {\n            if (!details.seenCR) { details.line++; }\n            details.column = 1;\n            details.seenCR = false;\n          } else if (ch === \"\\r\" || ch === \"\\u2028\" || ch === \"\\u2029\") {\n            details.line++;\n            details.column = 1;\n            details.seenCR = true;\n          } else {\n            details.column++;\n            details.seenCR = false;\n          }\n        }\n      }\n\n      if (peg$cachedPos !== pos) {\n        if (peg$cachedPos > pos) {\n          peg$cachedPos = 0;\n          peg$cachedPosDetails = { line: 1, column: 1, seenCR: false };\n        }\n        advance(peg$cachedPosDetails, peg$cachedPos, pos);\n        peg$cachedPos = pos;\n      }\n\n      return peg$cachedPosDetails;\n    }\n\n    function peg$fail(expected) {\n      if (peg$currPos < peg$maxFailPos) { return; }\n\n      if (peg$currPos > peg$maxFailPos) {\n        peg$maxFailPos = peg$currPos;\n        peg$maxFailExpected = [];\n      }\n\n      peg$maxFailExpected.push(expected);\n    }\n\n    function peg$buildException(message, expected, pos) {\n      function cleanupExpected(expected) {\n        var i = 1;\n\n        expected.sort(function(a, b) {\n          if (a.description < b.description) {\n            return -1;\n          } else if (a.description > b.description) {\n            return 1;\n          } else {\n            return 0;\n          }\n        });\n\n        while (i < expected.length) {\n          if (expected[i - 1] === expected[i]) {\n            expected.splice(i, 1);\n          } else {\n            i++;\n          }\n        }\n      }\n\n      function buildMessage(expected, found) {\n        function stringEscape(s) {\n          function hex(ch) { return ch.charCodeAt(0).toString(16).toUpperCase(); }\n\n          return s\n            .replace(/\\\\/g,   '\\\\\\\\')\n            .replace(/\"/g,    '\\\\\"')\n            .replace(/\\x08/g, '\\\\b')\n            .replace(/\\t/g,   '\\\\t')\n            .replace(/\\n/g,   '\\\\n')\n            .replace(/\\f/g,   '\\\\f')\n            .replace(/\\r/g,   '\\\\r')\n            .replace(/[\\x00-\\x07\\x0B\\x0E\\x0F]/g, function(ch) { return '\\\\x0' + hex(ch); })\n            .replace(/[\\x10-\\x1F\\x80-\\xFF]/g,    function(ch) { return '\\\\x'  + hex(ch); })\n            .replace(/[\\u0180-\\u0FFF]/g,         function(ch) { return '\\\\u0' + hex(ch); })\n            .replace(/[\\u1080-\\uFFFF]/g,         function(ch) { return '\\\\u'  + hex(ch); });\n        }\n\n        var expectedDescs = new Array(expected.length),\n            expectedDesc, foundDesc, i;\n\n        for (i = 0; i < expected.length; i++) {\n          expectedDescs[i] = expected[i].description;\n        }\n\n        expectedDesc = expected.length > 1\n          ? expectedDescs.slice(0, -1).join(\", \")\n              + \" or \"\n              + expectedDescs[expected.length - 1]\n          : expectedDescs[0];\n\n        foundDesc = found ? \"\\\"\" + stringEscape(found) + \"\\\"\" : \"end of input\";\n\n        return \"Expected \" + expectedDesc + \" but \" + foundDesc + \" found.\";\n      }\n\n      var posDetails = peg$computePosDetails(pos),\n          found      = pos < input.length ? input.charAt(pos) : null;\n\n      if (expected !== null) {\n        cleanupExpected(expected);\n      }\n\n      return new SyntaxError(\n        message !== null ? message : buildMessage(expected, found),\n        expected,\n        found,\n        pos,\n        posDetails.line,\n        posDetails.column\n      );\n    }\n\n    function peg$parsestart() {\n      var s0;\n\n      s0 = peg$parsemessageFormatPattern();\n\n      return s0;\n    }\n\n    function peg$parsemessageFormatPattern() {\n      var s0, s1, s2;\n\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parsemessageFormatElement();\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parsemessageFormatElement();\n      }\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c1(s1);\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parsemessageFormatElement() {\n      var s0;\n\n      s0 = peg$parsemessageTextElement();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseargumentElement();\n      }\n\n      return s0;\n    }\n\n    function peg$parsemessageText() {\n      var s0, s1, s2, s3, s4, s5;\n\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$currPos;\n      s3 = peg$parse_();\n      if (s3 !== peg$FAILED) {\n        s4 = peg$parsechars();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parse_();\n          if (s5 !== peg$FAILED) {\n            s3 = [s3, s4, s5];\n            s2 = s3;\n          } else {\n            peg$currPos = s2;\n            s2 = peg$c2;\n          }\n        } else {\n          peg$currPos = s2;\n          s2 = peg$c2;\n        }\n      } else {\n        peg$currPos = s2;\n        s2 = peg$c2;\n      }\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          s2 = peg$currPos;\n          s3 = peg$parse_();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parsechars();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parse_();\n              if (s5 !== peg$FAILED) {\n                s3 = [s3, s4, s5];\n                s2 = s3;\n              } else {\n                peg$currPos = s2;\n                s2 = peg$c2;\n              }\n            } else {\n              peg$currPos = s2;\n              s2 = peg$c2;\n            }\n          } else {\n            peg$currPos = s2;\n            s2 = peg$c2;\n          }\n        }\n      } else {\n        s1 = peg$c2;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c3(s1);\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parsews();\n        if (s1 !== peg$FAILED) {\n          s1 = input.substring(s0, peg$currPos);\n        }\n        s0 = s1;\n      }\n\n      return s0;\n    }\n\n    function peg$parsemessageTextElement() {\n      var s0, s1;\n\n      s0 = peg$currPos;\n      s1 = peg$parsemessageText();\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c4(s1);\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parseargument() {\n      var s0, s1, s2;\n\n      s0 = peg$parsenumber();\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = [];\n        if (peg$c5.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c6); }\n        }\n        if (s2 !== peg$FAILED) {\n          while (s2 !== peg$FAILED) {\n            s1.push(s2);\n            if (peg$c5.test(input.charAt(peg$currPos))) {\n              s2 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s2 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c6); }\n            }\n          }\n        } else {\n          s1 = peg$c2;\n        }\n        if (s1 !== peg$FAILED) {\n          s1 = input.substring(s0, peg$currPos);\n        }\n        s0 = s1;\n      }\n\n      return s0;\n    }\n\n    function peg$parseargumentElement() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 123) {\n        s1 = peg$c7;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c8); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseargument();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$currPos;\n              if (input.charCodeAt(peg$currPos) === 44) {\n                s6 = peg$c10;\n                peg$currPos++;\n              } else {\n                s6 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c11); }\n              }\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parse_();\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$parseelementFormat();\n                  if (s8 !== peg$FAILED) {\n                    s6 = [s6, s7, s8];\n                    s5 = s6;\n                  } else {\n                    peg$currPos = s5;\n                    s5 = peg$c2;\n                  }\n                } else {\n                  peg$currPos = s5;\n                  s5 = peg$c2;\n                }\n              } else {\n                peg$currPos = s5;\n                s5 = peg$c2;\n              }\n              if (s5 === peg$FAILED) {\n                s5 = peg$c9;\n              }\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parse_();\n                if (s6 !== peg$FAILED) {\n                  if (input.charCodeAt(peg$currPos) === 125) {\n                    s7 = peg$c12;\n                    peg$currPos++;\n                  } else {\n                    s7 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c13); }\n                  }\n                  if (s7 !== peg$FAILED) {\n                    peg$reportedPos = s0;\n                    s1 = peg$c14(s3, s5);\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$c2;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$c2;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c2;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c2;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n\n      return s0;\n    }\n\n    function peg$parseelementFormat() {\n      var s0;\n\n      s0 = peg$parsesimpleFormat();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parsepluralFormat();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseselectFormat();\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parsesimpleFormat() {\n      var s0, s1, s2, s3, s4, s5, s6;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 6) === peg$c15) {\n        s1 = peg$c15;\n        peg$currPos += 6;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c16); }\n      }\n      if (s1 === peg$FAILED) {\n        if (input.substr(peg$currPos, 4) === peg$c17) {\n          s1 = peg$c17;\n          peg$currPos += 4;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c18); }\n        }\n        if (s1 === peg$FAILED) {\n          if (input.substr(peg$currPos, 4) === peg$c19) {\n            s1 = peg$c19;\n            peg$currPos += 4;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c20); }\n          }\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s4 = peg$c10;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c11); }\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parse_();\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parsechars();\n              if (s6 !== peg$FAILED) {\n                s4 = [s4, s5, s6];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$c2;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$c2;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$c2;\n          }\n          if (s3 === peg$FAILED) {\n            s3 = peg$c9;\n          }\n          if (s3 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c21(s1, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n\n      return s0;\n    }\n\n    function peg$parsepluralFormat() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 6) === peg$c22) {\n        s1 = peg$c22;\n        peg$currPos += 6;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c23); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s3 = peg$c10;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c11); }\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseoffset();\n              if (s5 === peg$FAILED) {\n                s5 = peg$c9;\n              }\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parse_();\n                if (s6 !== peg$FAILED) {\n                  s7 = [];\n                  s8 = peg$parseoptionalFormatPattern();\n                  if (s8 !== peg$FAILED) {\n                    while (s8 !== peg$FAILED) {\n                      s7.push(s8);\n                      s8 = peg$parseoptionalFormatPattern();\n                    }\n                  } else {\n                    s7 = peg$c2;\n                  }\n                  if (s7 !== peg$FAILED) {\n                    peg$reportedPos = s0;\n                    s1 = peg$c24(s5, s7);\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$c2;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$c2;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c2;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c2;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n\n      return s0;\n    }\n\n    function peg$parseselectFormat() {\n      var s0, s1, s2, s3, s4, s5, s6;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 6) === peg$c25) {\n        s1 = peg$c25;\n        peg$currPos += 6;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c26); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s3 = peg$c10;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c11); }\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              s5 = [];\n              s6 = peg$parseoptionalFormatPattern();\n              if (s6 !== peg$FAILED) {\n                while (s6 !== peg$FAILED) {\n                  s5.push(s6);\n                  s6 = peg$parseoptionalFormatPattern();\n                }\n              } else {\n                s5 = peg$c2;\n              }\n              if (s5 !== peg$FAILED) {\n                peg$reportedPos = s0;\n                s1 = peg$c27(s5);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c2;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c2;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n\n      return s0;\n    }\n\n    function peg$parseselector() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 61) {\n        s2 = peg$c28;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c29); }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsenumber();\n        if (s3 !== peg$FAILED) {\n          s2 = [s2, s3];\n          s1 = s2;\n        } else {\n          peg$currPos = s1;\n          s1 = peg$c2;\n        }\n      } else {\n        peg$currPos = s1;\n        s1 = peg$c2;\n      }\n      if (s1 !== peg$FAILED) {\n        s1 = input.substring(s0, peg$currPos);\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$parsechars();\n      }\n\n      return s0;\n    }\n\n    function peg$parseoptionalFormatPattern() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n      s0 = peg$currPos;\n      s1 = peg$parse_();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseselector();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parse_();\n          if (s3 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 123) {\n              s4 = peg$c7;\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c8); }\n            }\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parse_();\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parsemessageFormatPattern();\n                if (s6 !== peg$FAILED) {\n                  s7 = peg$parse_();\n                  if (s7 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 125) {\n                      s8 = peg$c12;\n                      peg$currPos++;\n                    } else {\n                      s8 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c13); }\n                    }\n                    if (s8 !== peg$FAILED) {\n                      peg$reportedPos = s0;\n                      s1 = peg$c30(s2, s6);\n                      s0 = s1;\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$c2;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$c2;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$c2;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c2;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c2;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n\n      return s0;\n    }\n\n    function peg$parseoffset() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 7) === peg$c31) {\n        s1 = peg$c31;\n        peg$currPos += 7;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c32); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsenumber();\n          if (s3 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c33(s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n\n      return s0;\n    }\n\n    function peg$parsews() {\n      var s0, s1;\n\n      peg$silentFails++;\n      s0 = [];\n      if (peg$c35.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c36); }\n      }\n      if (s1 !== peg$FAILED) {\n        while (s1 !== peg$FAILED) {\n          s0.push(s1);\n          if (peg$c35.test(input.charAt(peg$currPos))) {\n            s1 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c36); }\n          }\n        }\n      } else {\n        s0 = peg$c2;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c34); }\n      }\n\n      return s0;\n    }\n\n    function peg$parse_() {\n      var s0, s1, s2;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parsews();\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parsews();\n      }\n      if (s1 !== peg$FAILED) {\n        s1 = input.substring(s0, peg$currPos);\n      }\n      s0 = s1;\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c37); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsedigit() {\n      var s0;\n\n      if (peg$c38.test(input.charAt(peg$currPos))) {\n        s0 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c39); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsehexDigit() {\n      var s0;\n\n      if (peg$c40.test(input.charAt(peg$currPos))) {\n        s0 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c41); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsenumber() {\n      var s0, s1, s2, s3, s4, s5;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 48) {\n        s1 = peg$c42;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c43); }\n      }\n      if (s1 === peg$FAILED) {\n        s1 = peg$currPos;\n        s2 = peg$currPos;\n        if (peg$c44.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c45); }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = [];\n          s5 = peg$parsedigit();\n          while (s5 !== peg$FAILED) {\n            s4.push(s5);\n            s5 = peg$parsedigit();\n          }\n          if (s4 !== peg$FAILED) {\n            s3 = [s3, s4];\n            s2 = s3;\n          } else {\n            peg$currPos = s2;\n            s2 = peg$c2;\n          }\n        } else {\n          peg$currPos = s2;\n          s2 = peg$c2;\n        }\n        if (s2 !== peg$FAILED) {\n          s2 = input.substring(s1, peg$currPos);\n        }\n        s1 = s2;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c46(s1);\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parsechar() {\n      var s0, s1, s2, s3, s4, s5, s6, s7;\n\n      if (peg$c47.test(input.charAt(peg$currPos))) {\n        s0 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c48); }\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 2) === peg$c49) {\n          s1 = peg$c49;\n          peg$currPos += 2;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c50); }\n        }\n        if (s1 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c51();\n        }\n        s0 = s1;\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          if (input.substr(peg$currPos, 2) === peg$c52) {\n            s1 = peg$c52;\n            peg$currPos += 2;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c53); }\n          }\n          if (s1 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c54();\n          }\n          s0 = s1;\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            if (input.substr(peg$currPos, 2) === peg$c55) {\n              s1 = peg$c55;\n              peg$currPos += 2;\n            } else {\n              s1 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c56); }\n            }\n            if (s1 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c57();\n            }\n            s0 = s1;\n            if (s0 === peg$FAILED) {\n              s0 = peg$currPos;\n              if (input.substr(peg$currPos, 2) === peg$c58) {\n                s1 = peg$c58;\n                peg$currPos += 2;\n              } else {\n                s1 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c59); }\n              }\n              if (s1 !== peg$FAILED) {\n                s2 = peg$currPos;\n                s3 = peg$currPos;\n                s4 = peg$parsehexDigit();\n                if (s4 !== peg$FAILED) {\n                  s5 = peg$parsehexDigit();\n                  if (s5 !== peg$FAILED) {\n                    s6 = peg$parsehexDigit();\n                    if (s6 !== peg$FAILED) {\n                      s7 = peg$parsehexDigit();\n                      if (s7 !== peg$FAILED) {\n                        s4 = [s4, s5, s6, s7];\n                        s3 = s4;\n                      } else {\n                        peg$currPos = s3;\n                        s3 = peg$c2;\n                      }\n                    } else {\n                      peg$currPos = s3;\n                      s3 = peg$c2;\n                    }\n                  } else {\n                    peg$currPos = s3;\n                    s3 = peg$c2;\n                  }\n                } else {\n                  peg$currPos = s3;\n                  s3 = peg$c2;\n                }\n                if (s3 !== peg$FAILED) {\n                  s3 = input.substring(s2, peg$currPos);\n                }\n                s2 = s3;\n                if (s2 !== peg$FAILED) {\n                  peg$reportedPos = s0;\n                  s1 = peg$c60(s2);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$c2;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c2;\n              }\n            }\n          }\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parsechars() {\n      var s0, s1, s2;\n\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parsechar();\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          s2 = peg$parsechar();\n        }\n      } else {\n        s1 = peg$c2;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c61(s1);\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    peg$result = peg$startRuleFunction();\n\n    if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n      return peg$result;\n    } else {\n      if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n        peg$fail({ type: \"end\", description: \"end of input\" });\n      }\n\n      throw peg$buildException(null, peg$maxFailExpected, peg$maxFailPos);\n    }\n  }\n\n  return {\n    SyntaxError: SyntaxError,\n    parse:       parse\n  };\n})();","// GENERATED FILE\nexport default {\"locale\":\"en\",\"pluralRuleFunction\":function (n) {var i=Math.floor(Math.abs(n)),v=n.toString().replace(/^[^.]*\\.?/,\"\").length;n=Math.floor(n);if(i===1&&v===0)return\"one\";return\"other\";}};","/* jslint esnext: true */\n\nimport IntlMessageFormat from './core';\nimport defaultLocale from './en';\n\nIntlMessageFormat.__addLocaleData(defaultLocale);\nIntlMessageFormat.defaultLocale = 'en';\n\nexport default IntlMessageFormat;\n","// GENERATED FILE\nexport default {\"locale\":\"en\",\"pluralRuleFunction\":function (n) {var i=Math.floor(Math.abs(n)),v=n.toString().replace(/^[^.]*\\.?/,\"\").length;n=Math.floor(n);if(i===1&&v===0)return\"one\";return\"other\";},\"fields\":{\"second\":{\"displayName\":\"Second\",\"relative\":{\"0\":\"now\"},\"relativeTime\":{\"future\":{\"one\":\"in {0} second\",\"other\":\"in {0} seconds\"},\"past\":{\"one\":\"{0} second ago\",\"other\":\"{0} seconds ago\"}}},\"minute\":{\"displayName\":\"Minute\",\"relativeTime\":{\"future\":{\"one\":\"in {0} minute\",\"other\":\"in {0} minutes\"},\"past\":{\"one\":\"{0} minute ago\",\"other\":\"{0} minutes ago\"}}},\"hour\":{\"displayName\":\"Hour\",\"relativeTime\":{\"future\":{\"one\":\"in {0} hour\",\"other\":\"in {0} hours\"},\"past\":{\"one\":\"{0} hour ago\",\"other\":\"{0} hours ago\"}}},\"day\":{\"displayName\":\"Day\",\"relative\":{\"0\":\"today\",\"1\":\"tomorrow\",\"-1\":\"yesterday\"},\"relativeTime\":{\"future\":{\"one\":\"in {0} day\",\"other\":\"in {0} days\"},\"past\":{\"one\":\"{0} day ago\",\"other\":\"{0} days ago\"}}},\"month\":{\"displayName\":\"Month\",\"relative\":{\"0\":\"this month\",\"1\":\"next month\",\"-1\":\"last month\"},\"relativeTime\":{\"future\":{\"one\":\"in {0} month\",\"other\":\"in {0} months\"},\"past\":{\"one\":\"{0} month ago\",\"other\":\"{0} months ago\"}}},\"year\":{\"displayName\":\"Year\",\"relative\":{\"0\":\"this year\",\"1\":\"next year\",\"-1\":\"last year\"},\"relativeTime\":{\"future\":{\"one\":\"in {0} year\",\"other\":\"in {0} years\"},\"past\":{\"one\":\"{0} year ago\",\"other\":\"{0} years ago\"}}}}};","/* jslint esnext: true */\n\nimport IntlRelativeFormat from './core';\nimport defaultLocale from './en';\n\nIntlRelativeFormat.__addLocaleData(defaultLocale);\nIntlRelativeFormat.defaultLocale = 'en';\n\nexport default IntlRelativeFormat;\n"]}