{"version":3,"file":"intl-relativeformat.min.js","sources":["utils.js","compiler.js","core.js","diff.js","es5.js","parser.js","en.js","main.js"],"names":[],"mappings":"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","sourcesContent":["/*\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\nCopyrights licensed under the New BSD License.\nSee the accompanying LICENSE file for terms.\n*/\n\n/* jslint esnext: true */\n\nexport var hop = Object.prototype.hasOwnProperty;\n\nexport function extend(obj) {\n    var sources = Array.prototype.slice.call(arguments, 1),\n        i, len, source, key;\n\n    for (i = 0, len = sources.length; i < len; i += 1) {\n        source = sources[i];\n        if (!source) { continue; }\n\n        for (key in source) {\n            if (hop.call(source, key)) {\n                obj[key] = source[key];\n            }\n        }\n    }\n\n    return obj;\n}\n","/*\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\nCopyrights licensed under the New BSD License.\nSee the accompanying LICENSE file for terms.\n*/\n\n/* jslint esnext: true */\n\nexport default Compiler;\n\nfunction Compiler(locales, formats, pluralFn) {\n    this.locales  = locales;\n    this.formats  = formats;\n    this.pluralFn = pluralFn;\n}\n\nCompiler.prototype.compile = function (ast) {\n    this.pluralStack        = [];\n    this.currentPlural      = null;\n    this.pluralNumberFormat = null;\n\n    return this.compileMessage(ast);\n};\n\nCompiler.prototype.compileMessage = function (ast) {\n    if (!(ast && ast.type === 'messageFormatPattern')) {\n        throw new Error('Message AST is not of type: \"messageFormatPattern\"');\n    }\n\n    var elements = ast.elements,\n        pattern  = [];\n\n    var i, len, element;\n\n    for (i = 0, len = elements.length; i < len; i += 1) {\n        element = elements[i];\n\n        switch (element.type) {\n            case 'messageTextElement':\n                pattern.push(this.compileMessageText(element));\n                break;\n\n            case 'argumentElement':\n                pattern.push(this.compileArgument(element));\n                break;\n\n            default:\n                throw new Error('Message element does not have a valid type');\n        }\n    }\n\n    return pattern;\n};\n\nCompiler.prototype.compileMessageText = function (element) {\n    // When this `element` is part of plural sub-pattern and its value contains\n    // an unescaped '#', use a `PluralOffsetString` helper to properly output\n    // the number with the correct offset in the string.\n    if (this.currentPlural && /(^|[^\\\\])#/g.test(element.value)) {\n        // Create a cache a NumberFormat instance that can be reused for any\n        // PluralOffsetString instance in this message.\n        if (!this.pluralNumberFormat) {\n            this.pluralNumberFormat = new Intl.NumberFormat(this.locales);\n        }\n\n        return new PluralOffsetString(\n                this.currentPlural.id,\n                this.currentPlural.format.offset,\n                this.pluralNumberFormat,\n                element.value);\n    }\n\n    // Unescape the escaped '#'s in the message text.\n    return element.value.replace(/\\\\#/g, '#');\n};\n\nCompiler.prototype.compileArgument = function (element) {\n    var format = element.format;\n\n    if (!format) {\n        return new StringFormat(element.id);\n    }\n\n    var formats  = this.formats,\n        locales  = this.locales,\n        pluralFn = this.pluralFn,\n        options;\n\n    switch (format.type) {\n        case 'numberFormat':\n            options = formats.number[format.style];\n            return {\n                id    : element.id,\n                format: new Intl.NumberFormat(locales, options).format\n            };\n\n        case 'dateFormat':\n            options = formats.date[format.style];\n            return {\n                id    : element.id,\n                format: new Intl.DateTimeFormat(locales, options).format\n            };\n\n        case 'timeFormat':\n            options = formats.time[format.style];\n            return {\n                id    : element.id,\n                format: new Intl.DateTimeFormat(locales, options).format\n            };\n\n        case 'pluralFormat':\n            options = this.compileOptions(element);\n            return new PluralFormat(element.id, format.offset, options, pluralFn);\n\n        case 'selectFormat':\n            options = this.compileOptions(element);\n            return new SelectFormat(element.id, options);\n\n        default:\n            throw new Error('Message element does not have a valid format type');\n    }\n};\n\nCompiler.prototype.compileOptions = function (element) {\n    var format      = element.format,\n        options     = format.options,\n        optionsHash = {};\n\n    // Save the current plural element, if any, then set it to a new value when\n    // compiling the options sub-patterns. This conform's the spec's algorithm\n    // for handling `\"#\"` synax in message text.\n    this.pluralStack.push(this.currentPlural);\n    this.currentPlural = format.type === 'pluralFormat' ? element : null;\n\n    var i, len, option;\n\n    for (i = 0, len = options.length; i < len; i += 1) {\n        option = options[i];\n\n        // Compile the sub-pattern and save it under the options's selector.\n        optionsHash[option.selector] = this.compileMessage(option.value);\n    }\n\n    // Pop the plural stack to put back the original currnet plural value.\n    this.currentPlural = this.pluralStack.pop();\n\n    return optionsHash;\n};\n\n// -- Compiler Helper Classes --------------------------------------------------\n\nfunction StringFormat(id) {\n    this.id = id;\n}\n\nStringFormat.prototype.format = function (value) {\n    if (!value) {\n        return '';\n    }\n\n    return typeof value === 'string' ? value : String(value);\n};\n\nfunction PluralFormat(id, offset, options, pluralFn) {\n    this.id       = id;\n    this.offset   = offset;\n    this.options  = options;\n    this.pluralFn = pluralFn;\n}\n\nPluralFormat.prototype.getOption = function (value) {\n    var options = this.options;\n\n    var option = options['=' + value] ||\n            options[this.pluralFn(value - this.offset)];\n\n    return option || options.other;\n};\n\nfunction PluralOffsetString(id, offset, numberFormat, string) {\n    this.id           = id;\n    this.offset       = offset;\n    this.numberFormat = numberFormat;\n    this.string       = string;\n}\n\nPluralOffsetString.prototype.format = function (value) {\n    var number = this.numberFormat.format(value - this.offset);\n\n    return this.string\n            .replace(/(^|[^\\\\])#/g, '$1' + number)\n            .replace(/\\\\#/g, '#');\n};\n\nfunction SelectFormat(id, options) {\n    this.id      = id;\n    this.options = options;\n}\n\nSelectFormat.prototype.getOption = function (value) {\n    var options = this.options;\n    return options[value] || options.other;\n};\n","/*\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\nCopyrights licensed under the New BSD License.\nSee the accompanying LICENSE file for terms.\n*/\n\n/* jslint esnext: true */\n\nimport {extend, hop} from './utils';\nimport {defineProperty, objCreate} from './es5';\nimport Compiler from './compiler';\nimport parser from 'intl-messageformat-parser';\n\nexport default MessageFormat;\n\n// -- MessageFormat --------------------------------------------------------\n\nfunction MessageFormat(message, locales, formats) {\n    // Parse string messages into an AST.\n    var ast = typeof message === 'string' ?\n            MessageFormat.__parse(message) : message;\n\n    if (!(ast && ast.type === 'messageFormatPattern')) {\n        throw new TypeError('A message must be provided as a String or AST.');\n    }\n\n    // Creates a new object with the specified `formats` merged with the default\n    // formats.\n    formats = this._mergeFormats(MessageFormat.formats, formats);\n\n    // Defined first because it's used to build the format pattern.\n    defineProperty(this, '_locale',  {value: this._resolveLocale(locales)});\n\n    var pluralFn = MessageFormat.__localeData__[this._locale].pluralRuleFunction;\n\n    // Compile the `ast` to a pattern that is highly optimized for repeated\n    // `format()` invocations. **Note:** This passes the `locales` set provided\n    // to the constructor instead of just the resolved locale.\n    var pattern = this._compilePattern(ast, locales, formats, pluralFn);\n\n    // \"Bind\" `format()` method to `this` so it can be passed by reference like\n    // the other `Intl` APIs.\n    var messageFormat = this;\n    this.format = function (values) {\n        return messageFormat._format(pattern, values);\n    };\n}\n\n// Default format options used as the prototype of the `formats` provided to the\n// constructor. These are used when constructing the internal Intl.NumberFormat\n// and Intl.DateTimeFormat instances.\ndefineProperty(MessageFormat, 'formats', {\n    enumerable: true,\n\n    value: {\n        number: {\n            'currency': {\n                style: 'currency'\n            },\n\n            'percent': {\n                style: 'percent'\n            }\n        },\n\n        date: {\n            'short': {\n                month: 'numeric',\n                day  : 'numeric',\n                year : '2-digit'\n            },\n\n            'medium': {\n                month: 'short',\n                day  : 'numeric',\n                year : 'numeric'\n            },\n\n            'long': {\n                month: 'long',\n                day  : 'numeric',\n                year : 'numeric'\n            },\n\n            'full': {\n                weekday: 'long',\n                month  : 'long',\n                day    : 'numeric',\n                year   : 'numeric'\n            }\n        },\n\n        time: {\n            'short': {\n                hour  : 'numeric',\n                minute: 'numeric'\n            },\n\n            'medium':  {\n                hour  : 'numeric',\n                minute: 'numeric',\n                second: 'numeric'\n            },\n\n            'long': {\n                hour        : 'numeric',\n                minute      : 'numeric',\n                second      : 'numeric',\n                timeZoneName: 'short'\n            },\n\n            'full': {\n                hour        : 'numeric',\n                minute      : 'numeric',\n                second      : 'numeric',\n                timeZoneName: 'short'\n            }\n        }\n    }\n});\n\n// Define internal private properties for dealing with locale data.\ndefineProperty(MessageFormat, '__localeData__', {value: objCreate(null)});\ndefineProperty(MessageFormat, '__addLocaleData', {value: function (data) {\n    if (!(data && data.locale)) {\n        throw new Error(\n            'Locale data provided to IntlMessageFormat does not contain a ' +\n            '`locale` property'\n        );\n    }\n\n    if (!data.pluralRuleFunction) {\n        throw new Error(\n            'Locale data provided to IntlMessageFormat does not contain a ' +\n            '`pluralRuleFunction` property'\n        );\n    }\n\n    // Message format locale data only requires the first part of the tag.\n    var locale = data.locale.toLowerCase().split('-')[0];\n\n    MessageFormat.__localeData__[locale] = data;\n}});\n\n// Defines `__parse()` static method as an exposed private.\ndefineProperty(MessageFormat, '__parse', {value: parser.parse});\n\n// Define public `defaultLocale` property which defaults to English, but can be\n// set by the developer.\ndefineProperty(MessageFormat, 'defaultLocale', {\n    enumerable: true,\n    writable  : true,\n    value     : undefined\n});\n\nMessageFormat.prototype.resolvedOptions = function () {\n    // TODO: Provide anything else?\n    return {\n        locale: this._locale\n    };\n};\n\nMessageFormat.prototype._compilePattern = function (ast, locales, formats, pluralFn) {\n    var compiler = new Compiler(locales, formats, pluralFn);\n    return compiler.compile(ast);\n};\n\nMessageFormat.prototype._format = function (pattern, values) {\n    var result = '',\n        i, len, part, id, value;\n\n    for (i = 0, len = pattern.length; i < len; i += 1) {\n        part = pattern[i];\n\n        // Exist early for string parts.\n        if (typeof part === 'string') {\n            result += part;\n            continue;\n        }\n\n        id = part.id;\n\n        // Enforce that all required values are provided by the caller.\n        if (!(values && hop.call(values, id))) {\n            throw new Error('A value must be provided for: ' + id);\n        }\n\n        value = values[id];\n\n        // Recursively format plural and select parts' option — which can be a\n        // nested pattern structure. The choosing of the option to use is\n        // abstracted-by and delegated-to the part helper object.\n        if (part.options) {\n            result += this._format(part.getOption(value), values);\n        } else {\n            result += part.format(value);\n        }\n    }\n\n    return result;\n};\n\nMessageFormat.prototype._mergeFormats = function (defaults, formats) {\n    var mergedFormats = {},\n        type, mergedType;\n\n    for (type in defaults) {\n        if (!hop.call(defaults, type)) { continue; }\n\n        mergedFormats[type] = mergedType = objCreate(defaults[type]);\n\n        if (formats && hop.call(formats, type)) {\n            extend(mergedType, formats[type]);\n        }\n    }\n\n    return mergedFormats;\n};\n\nMessageFormat.prototype._resolveLocale = function (locales) {\n    if (!locales) {\n        locales = MessageFormat.defaultLocale;\n    }\n\n    if (typeof locales === 'string') {\n        locales = [locales];\n    }\n\n    var localeData = MessageFormat.__localeData__;\n    var i, len, locale;\n\n    for (i = 0, len = locales.length; i < len; i += 1) {\n        // We just need the root part of the langage tag.\n        locale = locales[i].split('-')[0].toLowerCase();\n\n        // Validate that the langage tag is structurally valid.\n        if (!/[a-z]{2,3}/.test(locale)) {\n            throw new Error(\n                'Language tag provided to IntlMessageFormat is not ' +\n                'structrually valid: ' + locale\n            );\n        }\n\n        // Return the first locale for which we have CLDR data registered.\n        if (hop.call(localeData, locale)) {\n            return locale;\n        }\n    }\n\n    throw new Error(\n        'No locale data has been added to IntlMessageFormat for: ' +\n        locales.join(', ')\n    );\n};\n","/*\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\nCopyrights licensed under the New BSD License.\nSee the accompanying LICENSE file for terms.\n*/\n\n/* jslint esnext: true */\n\nvar round = Math.round;\n\nfunction daysToYears (days) {\n    // 400 years have 146097 days (taking into account leap year rules)\n    return days * 400 / 146097;\n}\n\nexport default function (dfrom, dto) {\n    var millisecond = round(dto.getTime() - dfrom.getTime()),\n        second      = round(millisecond / 1000),\n        minute      = round(second / 60),\n        hour        = round(minute / 60),\n        day         = round(hour / 24),\n        week        = round(day / 7);\n\n    var rawYears = daysToYears(day),\n        month    = round(rawYears * 12),\n        year     = round(rawYears);\n\n    return {\n        millisecond: millisecond,\n        second     : second,\n        minute     : minute,\n        hour       : hour,\n        day        : day,\n        week       : week,\n        month      : month,\n        year       : year\n    };\n}\n","/*\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\nCopyrights licensed under the New BSD License.\nSee the accompanying LICENSE file for terms.\n*/\n\n/* jslint esnext: true */\n\nexport {defineProperty, objCreate};\n\n// Purposely using the same implementation as the Intl.js `Intl` polyfill.\n// Copyright 2013 Andy Earnshaw, MIT License\n\nvar hop = Object.prototype.hasOwnProperty;\n\nvar realDefineProp = (function () {\n    try { return !!Object.defineProperty({}, 'a', {}); }\n    catch (e) { return false; }\n})();\n\nvar es3 = !realDefineProp && !Object.prototype.__defineGetter__;\n\nvar defineProperty = realDefineProp ? Object.defineProperty :\n        function (obj, name, desc) {\n\n    if ('get' in desc && obj.__defineGetter__) {\n        obj.__defineGetter__(name, desc.get);\n    } else if (!hop.call(obj, name) || 'value' in desc) {\n        obj[name] = desc.value;\n    }\n};\n\nvar objCreate = Object.create || function (proto, props) {\n    var obj, k;\n\n    function F() {}\n    F.prototype = proto;\n    obj = new F();\n\n    for (k in props) {\n        if (hop.call(props, k)) {\n            defineProperty(obj, k, props[k]);\n        }\n    }\n\n    return obj;\n};\n","export default (function() {\n  /*\n   * Generated by PEG.js 0.8.0.\n   *\n   * http://pegjs.majda.cz/\n   */\n\n  function peg$subclass(child, parent) {\n    function ctor() { this.constructor = child; }\n    ctor.prototype = parent.prototype;\n    child.prototype = new ctor();\n  }\n\n  function SyntaxError(message, expected, found, offset, line, column) {\n    this.message  = message;\n    this.expected = expected;\n    this.found    = found;\n    this.offset   = offset;\n    this.line     = line;\n    this.column   = column;\n\n    this.name     = \"SyntaxError\";\n  }\n\n  peg$subclass(SyntaxError, Error);\n\n  function parse(input) {\n    var options = arguments.length > 1 ? arguments[1] : {},\n\n        peg$FAILED = {},\n\n        peg$startRuleFunctions = { start: peg$parsestart },\n        peg$startRuleFunction  = peg$parsestart,\n\n        peg$c0 = [],\n        peg$c1 = function(elements) {\n                return {\n                    type    : 'messageFormatPattern',\n                    elements: elements\n                };\n            },\n        peg$c2 = peg$FAILED,\n        peg$c3 = function(text) {\n                var string = '',\n                    i, j, outerLen, inner, innerLen;\n\n                for (i = 0, outerLen = text.length; i < outerLen; i += 1) {\n                    inner = text[i];\n\n                    for (j = 0, innerLen = inner.length; j < innerLen; j += 1) {\n                        string += inner[j];\n                    }\n                }\n\n                return string;\n            },\n        peg$c4 = function(messageText) {\n                return {\n                    type : 'messageTextElement',\n                    value: messageText\n                };\n            },\n        peg$c5 = /^[^ \\t\\n\\r,.+={}#]/,\n        peg$c6 = { type: \"class\", value: \"[^ \\\\t\\\\n\\\\r,.+={}#]\", description: \"[^ \\\\t\\\\n\\\\r,.+={}#]\" },\n        peg$c7 = \"{\",\n        peg$c8 = { type: \"literal\", value: \"{\", description: \"\\\"{\\\"\" },\n        peg$c9 = null,\n        peg$c10 = \",\",\n        peg$c11 = { type: \"literal\", value: \",\", description: \"\\\",\\\"\" },\n        peg$c12 = \"}\",\n        peg$c13 = { type: \"literal\", value: \"}\", description: \"\\\"}\\\"\" },\n        peg$c14 = function(id, format) {\n                return {\n                    type  : 'argumentElement',\n                    id    : id,\n                    format: format && format[2]\n                };\n            },\n        peg$c15 = \"number\",\n        peg$c16 = { type: \"literal\", value: \"number\", description: \"\\\"number\\\"\" },\n        peg$c17 = \"date\",\n        peg$c18 = { type: \"literal\", value: \"date\", description: \"\\\"date\\\"\" },\n        peg$c19 = \"time\",\n        peg$c20 = { type: \"literal\", value: \"time\", description: \"\\\"time\\\"\" },\n        peg$c21 = function(type, style) {\n                return {\n                    type : type + 'Format',\n                    style: style && style[2]\n                };\n            },\n        peg$c22 = \"plural\",\n        peg$c23 = { type: \"literal\", value: \"plural\", description: \"\\\"plural\\\"\" },\n        peg$c24 = function(offset, options) {\n                return {\n                    type   : 'pluralFormat',\n                    offset : offset || 0,\n                    options: options\n                }\n            },\n        peg$c25 = \"select\",\n        peg$c26 = { type: \"literal\", value: \"select\", description: \"\\\"select\\\"\" },\n        peg$c27 = function(options) {\n                return {\n                    type   : 'selectFormat',\n                    options: options\n                }\n            },\n        peg$c28 = \"=\",\n        peg$c29 = { type: \"literal\", value: \"=\", description: \"\\\"=\\\"\" },\n        peg$c30 = function(selector, pattern) {\n                return {\n                    type    : 'optionalFormatPattern',\n                    selector: selector,\n                    value   : pattern\n                };\n            },\n        peg$c31 = \"offset:\",\n        peg$c32 = { type: \"literal\", value: \"offset:\", description: \"\\\"offset:\\\"\" },\n        peg$c33 = function(number) {\n                return number;\n            },\n        peg$c34 = { type: \"other\", description: \"whitespace\" },\n        peg$c35 = /^[ \\t\\n\\r]/,\n        peg$c36 = { type: \"class\", value: \"[ \\\\t\\\\n\\\\r]\", description: \"[ \\\\t\\\\n\\\\r]\" },\n        peg$c37 = { type: \"other\", description: \"optionalWhitespace\" },\n        peg$c38 = /^[0-9]/,\n        peg$c39 = { type: \"class\", value: \"[0-9]\", description: \"[0-9]\" },\n        peg$c40 = /^[0-9a-f]/i,\n        peg$c41 = { type: \"class\", value: \"[0-9a-f]i\", description: \"[0-9a-f]i\" },\n        peg$c42 = \"0\",\n        peg$c43 = { type: \"literal\", value: \"0\", description: \"\\\"0\\\"\" },\n        peg$c44 = /^[1-9]/,\n        peg$c45 = { type: \"class\", value: \"[1-9]\", description: \"[1-9]\" },\n        peg$c46 = function(digits) {\n            return parseInt(digits, 10);\n        },\n        peg$c47 = /^[^{}\\\\\\0-\\x1F \\t\\n\\r]/,\n        peg$c48 = { type: \"class\", value: \"[^{}\\\\\\\\\\\\0-\\\\x1F \\\\t\\\\n\\\\r]\", description: \"[^{}\\\\\\\\\\\\0-\\\\x1F \\\\t\\\\n\\\\r]\" },\n        peg$c49 = \"\\\\#\",\n        peg$c50 = { type: \"literal\", value: \"\\\\#\", description: \"\\\"\\\\\\\\#\\\"\" },\n        peg$c51 = function() { return '\\\\#'; },\n        peg$c52 = \"\\\\{\",\n        peg$c53 = { type: \"literal\", value: \"\\\\{\", description: \"\\\"\\\\\\\\{\\\"\" },\n        peg$c54 = function() { return '\\u007B'; },\n        peg$c55 = \"\\\\}\",\n        peg$c56 = { type: \"literal\", value: \"\\\\}\", description: \"\\\"\\\\\\\\}\\\"\" },\n        peg$c57 = function() { return '\\u007D'; },\n        peg$c58 = \"\\\\u\",\n        peg$c59 = { type: \"literal\", value: \"\\\\u\", description: \"\\\"\\\\\\\\u\\\"\" },\n        peg$c60 = function(digits) {\n                return String.fromCharCode(parseInt(digits, 16));\n            },\n        peg$c61 = function(chars) { return chars.join(''); },\n\n        peg$currPos          = 0,\n        peg$reportedPos      = 0,\n        peg$cachedPos        = 0,\n        peg$cachedPosDetails = { line: 1, column: 1, seenCR: false },\n        peg$maxFailPos       = 0,\n        peg$maxFailExpected  = [],\n        peg$silentFails      = 0,\n\n        peg$result;\n\n    if (\"startRule\" in options) {\n      if (!(options.startRule in peg$startRuleFunctions)) {\n        throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n      }\n\n      peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n    }\n\n    function text() {\n      return input.substring(peg$reportedPos, peg$currPos);\n    }\n\n    function offset() {\n      return peg$reportedPos;\n    }\n\n    function line() {\n      return peg$computePosDetails(peg$reportedPos).line;\n    }\n\n    function column() {\n      return peg$computePosDetails(peg$reportedPos).column;\n    }\n\n    function expected(description) {\n      throw peg$buildException(\n        null,\n        [{ type: \"other\", description: description }],\n        peg$reportedPos\n      );\n    }\n\n    function error(message) {\n      throw peg$buildException(message, null, peg$reportedPos);\n    }\n\n    function peg$computePosDetails(pos) {\n      function advance(details, startPos, endPos) {\n        var p, ch;\n\n        for (p = startPos; p < endPos; p++) {\n          ch = input.charAt(p);\n          if (ch === \"\\n\") {\n            if (!details.seenCR) { details.line++; }\n            details.column = 1;\n            details.seenCR = false;\n          } else if (ch === \"\\r\" || ch === \"\\u2028\" || ch === \"\\u2029\") {\n            details.line++;\n            details.column = 1;\n            details.seenCR = true;\n          } else {\n            details.column++;\n            details.seenCR = false;\n          }\n        }\n      }\n\n      if (peg$cachedPos !== pos) {\n        if (peg$cachedPos > pos) {\n          peg$cachedPos = 0;\n          peg$cachedPosDetails = { line: 1, column: 1, seenCR: false };\n        }\n        advance(peg$cachedPosDetails, peg$cachedPos, pos);\n        peg$cachedPos = pos;\n      }\n\n      return peg$cachedPosDetails;\n    }\n\n    function peg$fail(expected) {\n      if (peg$currPos < peg$maxFailPos) { return; }\n\n      if (peg$currPos > peg$maxFailPos) {\n        peg$maxFailPos = peg$currPos;\n        peg$maxFailExpected = [];\n      }\n\n      peg$maxFailExpected.push(expected);\n    }\n\n    function peg$buildException(message, expected, pos) {\n      function cleanupExpected(expected) {\n        var i = 1;\n\n        expected.sort(function(a, b) {\n          if (a.description < b.description) {\n            return -1;\n          } else if (a.description > b.description) {\n            return 1;\n          } else {\n            return 0;\n          }\n        });\n\n        while (i < expected.length) {\n          if (expected[i - 1] === expected[i]) {\n            expected.splice(i, 1);\n          } else {\n            i++;\n          }\n        }\n      }\n\n      function buildMessage(expected, found) {\n        function stringEscape(s) {\n          function hex(ch) { return ch.charCodeAt(0).toString(16).toUpperCase(); }\n\n          return s\n            .replace(/\\\\/g,   '\\\\\\\\')\n            .replace(/\"/g,    '\\\\\"')\n            .replace(/\\x08/g, '\\\\b')\n            .replace(/\\t/g,   '\\\\t')\n            .replace(/\\n/g,   '\\\\n')\n            .replace(/\\f/g,   '\\\\f')\n            .replace(/\\r/g,   '\\\\r')\n            .replace(/[\\x00-\\x07\\x0B\\x0E\\x0F]/g, function(ch) { return '\\\\x0' + hex(ch); })\n            .replace(/[\\x10-\\x1F\\x80-\\xFF]/g,    function(ch) { return '\\\\x'  + hex(ch); })\n            .replace(/[\\u0180-\\u0FFF]/g,         function(ch) { return '\\\\u0' + hex(ch); })\n            .replace(/[\\u1080-\\uFFFF]/g,         function(ch) { return '\\\\u'  + hex(ch); });\n        }\n\n        var expectedDescs = new Array(expected.length),\n            expectedDesc, foundDesc, i;\n\n        for (i = 0; i < expected.length; i++) {\n          expectedDescs[i] = expected[i].description;\n        }\n\n        expectedDesc = expected.length > 1\n          ? expectedDescs.slice(0, -1).join(\", \")\n              + \" or \"\n              + expectedDescs[expected.length - 1]\n          : expectedDescs[0];\n\n        foundDesc = found ? \"\\\"\" + stringEscape(found) + \"\\\"\" : \"end of input\";\n\n        return \"Expected \" + expectedDesc + \" but \" + foundDesc + \" found.\";\n      }\n\n      var posDetails = peg$computePosDetails(pos),\n          found      = pos < input.length ? input.charAt(pos) : null;\n\n      if (expected !== null) {\n        cleanupExpected(expected);\n      }\n\n      return new SyntaxError(\n        message !== null ? message : buildMessage(expected, found),\n        expected,\n        found,\n        pos,\n        posDetails.line,\n        posDetails.column\n      );\n    }\n\n    function peg$parsestart() {\n      var s0;\n\n      s0 = peg$parsemessageFormatPattern();\n\n      return s0;\n    }\n\n    function peg$parsemessageFormatPattern() {\n      var s0, s1, s2;\n\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parsemessageFormatElement();\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parsemessageFormatElement();\n      }\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c1(s1);\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parsemessageFormatElement() {\n      var s0;\n\n      s0 = peg$parsemessageTextElement();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseargumentElement();\n      }\n\n      return s0;\n    }\n\n    function peg$parsemessageText() {\n      var s0, s1, s2, s3, s4, s5;\n\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$currPos;\n      s3 = peg$parse_();\n      if (s3 !== peg$FAILED) {\n        s4 = peg$parsechars();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parse_();\n          if (s5 !== peg$FAILED) {\n            s3 = [s3, s4, s5];\n            s2 = s3;\n          } else {\n            peg$currPos = s2;\n            s2 = peg$c2;\n          }\n        } else {\n          peg$currPos = s2;\n          s2 = peg$c2;\n        }\n      } else {\n        peg$currPos = s2;\n        s2 = peg$c2;\n      }\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          s2 = peg$currPos;\n          s3 = peg$parse_();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parsechars();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parse_();\n              if (s5 !== peg$FAILED) {\n                s3 = [s3, s4, s5];\n                s2 = s3;\n              } else {\n                peg$currPos = s2;\n                s2 = peg$c2;\n              }\n            } else {\n              peg$currPos = s2;\n              s2 = peg$c2;\n            }\n          } else {\n            peg$currPos = s2;\n            s2 = peg$c2;\n          }\n        }\n      } else {\n        s1 = peg$c2;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c3(s1);\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parsews();\n        if (s1 !== peg$FAILED) {\n          s1 = input.substring(s0, peg$currPos);\n        }\n        s0 = s1;\n      }\n\n      return s0;\n    }\n\n    function peg$parsemessageTextElement() {\n      var s0, s1;\n\n      s0 = peg$currPos;\n      s1 = peg$parsemessageText();\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c4(s1);\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parseargument() {\n      var s0, s1, s2;\n\n      s0 = peg$parsenumber();\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = [];\n        if (peg$c5.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c6); }\n        }\n        if (s2 !== peg$FAILED) {\n          while (s2 !== peg$FAILED) {\n            s1.push(s2);\n            if (peg$c5.test(input.charAt(peg$currPos))) {\n              s2 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s2 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c6); }\n            }\n          }\n        } else {\n          s1 = peg$c2;\n        }\n        if (s1 !== peg$FAILED) {\n          s1 = input.substring(s0, peg$currPos);\n        }\n        s0 = s1;\n      }\n\n      return s0;\n    }\n\n    function peg$parseargumentElement() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 123) {\n        s1 = peg$c7;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c8); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseargument();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$currPos;\n              if (input.charCodeAt(peg$currPos) === 44) {\n                s6 = peg$c10;\n                peg$currPos++;\n              } else {\n                s6 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c11); }\n              }\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parse_();\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$parseelementFormat();\n                  if (s8 !== peg$FAILED) {\n                    s6 = [s6, s7, s8];\n                    s5 = s6;\n                  } else {\n                    peg$currPos = s5;\n                    s5 = peg$c2;\n                  }\n                } else {\n                  peg$currPos = s5;\n                  s5 = peg$c2;\n                }\n              } else {\n                peg$currPos = s5;\n                s5 = peg$c2;\n              }\n              if (s5 === peg$FAILED) {\n                s5 = peg$c9;\n              }\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parse_();\n                if (s6 !== peg$FAILED) {\n                  if (input.charCodeAt(peg$currPos) === 125) {\n                    s7 = peg$c12;\n                    peg$currPos++;\n                  } else {\n                    s7 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c13); }\n                  }\n                  if (s7 !== peg$FAILED) {\n                    peg$reportedPos = s0;\n                    s1 = peg$c14(s3, s5);\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$c2;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$c2;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c2;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c2;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n\n      return s0;\n    }\n\n    function peg$parseelementFormat() {\n      var s0;\n\n      s0 = peg$parsesimpleFormat();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parsepluralFormat();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseselectFormat();\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parsesimpleFormat() {\n      var s0, s1, s2, s3, s4, s5, s6;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 6) === peg$c15) {\n        s1 = peg$c15;\n        peg$currPos += 6;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c16); }\n      }\n      if (s1 === peg$FAILED) {\n        if (input.substr(peg$currPos, 4) === peg$c17) {\n          s1 = peg$c17;\n          peg$currPos += 4;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c18); }\n        }\n        if (s1 === peg$FAILED) {\n          if (input.substr(peg$currPos, 4) === peg$c19) {\n            s1 = peg$c19;\n            peg$currPos += 4;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c20); }\n          }\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s4 = peg$c10;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c11); }\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parse_();\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parsechars();\n              if (s6 !== peg$FAILED) {\n                s4 = [s4, s5, s6];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$c2;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$c2;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$c2;\n          }\n          if (s3 === peg$FAILED) {\n            s3 = peg$c9;\n          }\n          if (s3 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c21(s1, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n\n      return s0;\n    }\n\n    function peg$parsepluralFormat() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 6) === peg$c22) {\n        s1 = peg$c22;\n        peg$currPos += 6;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c23); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s3 = peg$c10;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c11); }\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseoffset();\n              if (s5 === peg$FAILED) {\n                s5 = peg$c9;\n              }\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parse_();\n                if (s6 !== peg$FAILED) {\n                  s7 = [];\n                  s8 = peg$parseoptionalFormatPattern();\n                  if (s8 !== peg$FAILED) {\n                    while (s8 !== peg$FAILED) {\n                      s7.push(s8);\n                      s8 = peg$parseoptionalFormatPattern();\n                    }\n                  } else {\n                    s7 = peg$c2;\n                  }\n                  if (s7 !== peg$FAILED) {\n                    peg$reportedPos = s0;\n                    s1 = peg$c24(s5, s7);\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$c2;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$c2;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c2;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c2;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n\n      return s0;\n    }\n\n    function peg$parseselectFormat() {\n      var s0, s1, s2, s3, s4, s5, s6;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 6) === peg$c25) {\n        s1 = peg$c25;\n        peg$currPos += 6;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c26); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s3 = peg$c10;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c11); }\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              s5 = [];\n              s6 = peg$parseoptionalFormatPattern();\n              if (s6 !== peg$FAILED) {\n                while (s6 !== peg$FAILED) {\n                  s5.push(s6);\n                  s6 = peg$parseoptionalFormatPattern();\n                }\n              } else {\n                s5 = peg$c2;\n              }\n              if (s5 !== peg$FAILED) {\n                peg$reportedPos = s0;\n                s1 = peg$c27(s5);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c2;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c2;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n\n      return s0;\n    }\n\n    function peg$parseselector() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 61) {\n        s2 = peg$c28;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c29); }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsenumber();\n        if (s3 !== peg$FAILED) {\n          s2 = [s2, s3];\n          s1 = s2;\n        } else {\n          peg$currPos = s1;\n          s1 = peg$c2;\n        }\n      } else {\n        peg$currPos = s1;\n        s1 = peg$c2;\n      }\n      if (s1 !== peg$FAILED) {\n        s1 = input.substring(s0, peg$currPos);\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$parsechars();\n      }\n\n      return s0;\n    }\n\n    function peg$parseoptionalFormatPattern() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n      s0 = peg$currPos;\n      s1 = peg$parse_();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseselector();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parse_();\n          if (s3 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 123) {\n              s4 = peg$c7;\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c8); }\n            }\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parse_();\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parsemessageFormatPattern();\n                if (s6 !== peg$FAILED) {\n                  s7 = peg$parse_();\n                  if (s7 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 125) {\n                      s8 = peg$c12;\n                      peg$currPos++;\n                    } else {\n                      s8 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c13); }\n                    }\n                    if (s8 !== peg$FAILED) {\n                      peg$reportedPos = s0;\n                      s1 = peg$c30(s2, s6);\n                      s0 = s1;\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$c2;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$c2;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$c2;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c2;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c2;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n\n      return s0;\n    }\n\n    function peg$parseoffset() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 7) === peg$c31) {\n        s1 = peg$c31;\n        peg$currPos += 7;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c32); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsenumber();\n          if (s3 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c33(s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n\n      return s0;\n    }\n\n    function peg$parsews() {\n      var s0, s1;\n\n      peg$silentFails++;\n      s0 = [];\n      if (peg$c35.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c36); }\n      }\n      if (s1 !== peg$FAILED) {\n        while (s1 !== peg$FAILED) {\n          s0.push(s1);\n          if (peg$c35.test(input.charAt(peg$currPos))) {\n            s1 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c36); }\n          }\n        }\n      } else {\n        s0 = peg$c2;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c34); }\n      }\n\n      return s0;\n    }\n\n    function peg$parse_() {\n      var s0, s1, s2;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parsews();\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parsews();\n      }\n      if (s1 !== peg$FAILED) {\n        s1 = input.substring(s0, peg$currPos);\n      }\n      s0 = s1;\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c37); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsedigit() {\n      var s0;\n\n      if (peg$c38.test(input.charAt(peg$currPos))) {\n        s0 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c39); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsehexDigit() {\n      var s0;\n\n      if (peg$c40.test(input.charAt(peg$currPos))) {\n        s0 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c41); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsenumber() {\n      var s0, s1, s2, s3, s4, s5;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 48) {\n        s1 = peg$c42;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c43); }\n      }\n      if (s1 === peg$FAILED) {\n        s1 = peg$currPos;\n        s2 = peg$currPos;\n        if (peg$c44.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c45); }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = [];\n          s5 = peg$parsedigit();\n          while (s5 !== peg$FAILED) {\n            s4.push(s5);\n            s5 = peg$parsedigit();\n          }\n          if (s4 !== peg$FAILED) {\n            s3 = [s3, s4];\n            s2 = s3;\n          } else {\n            peg$currPos = s2;\n            s2 = peg$c2;\n          }\n        } else {\n          peg$currPos = s2;\n          s2 = peg$c2;\n        }\n        if (s2 !== peg$FAILED) {\n          s2 = input.substring(s1, peg$currPos);\n        }\n        s1 = s2;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c46(s1);\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parsechar() {\n      var s0, s1, s2, s3, s4, s5, s6, s7;\n\n      if (peg$c47.test(input.charAt(peg$currPos))) {\n        s0 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c48); }\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 2) === peg$c49) {\n          s1 = peg$c49;\n          peg$currPos += 2;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c50); }\n        }\n        if (s1 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c51();\n        }\n        s0 = s1;\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          if (input.substr(peg$currPos, 2) === peg$c52) {\n            s1 = peg$c52;\n            peg$currPos += 2;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c53); }\n          }\n          if (s1 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c54();\n          }\n          s0 = s1;\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            if (input.substr(peg$currPos, 2) === peg$c55) {\n              s1 = peg$c55;\n              peg$currPos += 2;\n            } else {\n              s1 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c56); }\n            }\n            if (s1 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c57();\n            }\n            s0 = s1;\n            if (s0 === peg$FAILED) {\n              s0 = peg$currPos;\n              if (input.substr(peg$currPos, 2) === peg$c58) {\n                s1 = peg$c58;\n                peg$currPos += 2;\n              } else {\n                s1 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c59); }\n              }\n              if (s1 !== peg$FAILED) {\n                s2 = peg$currPos;\n                s3 = peg$currPos;\n                s4 = peg$parsehexDigit();\n                if (s4 !== peg$FAILED) {\n                  s5 = peg$parsehexDigit();\n                  if (s5 !== peg$FAILED) {\n                    s6 = peg$parsehexDigit();\n                    if (s6 !== peg$FAILED) {\n                      s7 = peg$parsehexDigit();\n                      if (s7 !== peg$FAILED) {\n                        s4 = [s4, s5, s6, s7];\n                        s3 = s4;\n                      } else {\n                        peg$currPos = s3;\n                        s3 = peg$c2;\n                      }\n                    } else {\n                      peg$currPos = s3;\n                      s3 = peg$c2;\n                    }\n                  } else {\n                    peg$currPos = s3;\n                    s3 = peg$c2;\n                  }\n                } else {\n                  peg$currPos = s3;\n                  s3 = peg$c2;\n                }\n                if (s3 !== peg$FAILED) {\n                  s3 = input.substring(s2, peg$currPos);\n                }\n                s2 = s3;\n                if (s2 !== peg$FAILED) {\n                  peg$reportedPos = s0;\n                  s1 = peg$c60(s2);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$c2;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c2;\n              }\n            }\n          }\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parsechars() {\n      var s0, s1, s2;\n\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parsechar();\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          s2 = peg$parsechar();\n        }\n      } else {\n        s1 = peg$c2;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c61(s1);\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    peg$result = peg$startRuleFunction();\n\n    if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n      return peg$result;\n    } else {\n      if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n        peg$fail({ type: \"end\", description: \"end of input\" });\n      }\n\n      throw peg$buildException(null, peg$maxFailExpected, peg$maxFailPos);\n    }\n  }\n\n  return {\n    SyntaxError: SyntaxError,\n    parse:       parse\n  };\n})();","// GENERATED FILE\nexport default {\"locale\":\"en\",\"pluralRuleFunction\":function (n) {var i=Math.floor(Math.abs(n)),v=n.toString().replace(/^[^.]*\\.?/,\"\").length;n=Math.floor(n);if(i===1&&v===0)return\"one\";return\"other\";}};","/* jslint esnext: true */\n\nimport IntlMessageFormat from './core';\nimport defaultLocale from './en';\n\nIntlMessageFormat.__addLocaleData(defaultLocale);\nIntlMessageFormat.defaultLocale = 'en';\n\nexport default IntlMessageFormat;\n"]}